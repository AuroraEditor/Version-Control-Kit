{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/version_control\/account\/==(_:_:)","title":"static func == (Account, Account) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/account\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/version_control\/account\/init(login:endpoint:token:emails:avatarurl:id:name:plan:)","title":"init(login: String, endpoint: String, token: String, emails: [IAPIEmail], avatarURL: String, id: Int, name: String, plan: String?)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/version_control\/account\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/version_control\/account\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/version_control\/account","title":"Account","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/auroranetworking\/networkrequestresponse()","title":"func networkRequestResponse() -> String?","type":"method"},{"path":"\/documentation\/version_control\/auroranetworking\/request(baseurl:path:headers:method:parameters:completionhandler:file:line:function:)","title":"func request(baseURL: String?, path: String, headers: [String : String]?, method: HTTPMethod, parameters: [String : Any]?, completionHandler: (Result<(Data, [AnyHashable : Any]), Error>) -> Void, file: String, line: Int, function: String)","type":"method"}],"path":"\/documentation\/version_control\/auroranetworking","title":"AuroraNetworking","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/checkoutprogress\/description","title":"var description: String?","type":"property"},{"path":"\/documentation\/version_control\/checkoutprogress\/kind","title":"var kind: String","type":"property"},{"path":"\/documentation\/version_control\/checkoutprogress\/targetbranch","title":"var targetBranch: String","type":"property"},{"path":"\/documentation\/version_control\/checkoutprogress\/title","title":"var title: String?","type":"property"},{"path":"\/documentation\/version_control\/checkoutprogress\/value","title":"var value: Int","type":"property"}],"path":"\/documentation\/version_control\/checkoutprogress","title":"CheckoutProgress","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/cloneprogress\/description","title":"var description: String?","type":"property"},{"path":"\/documentation\/version_control\/cloneprogress\/kind","title":"var kind: String","type":"property"},{"path":"\/documentation\/version_control\/cloneprogress\/title","title":"var title: String?","type":"property"},{"path":"\/documentation\/version_control\/cloneprogress\/value","title":"var value: Int","type":"property"}],"path":"\/documentation\/version_control\/cloneprogress","title":"CloneProgress","type":"class"},{"path":"\/documentation\/version_control\/diffhunk","title":"DiffHunk","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/diffselection\/frominitialselection(initialselection:)","title":"func fromInitialSelection(initialSelection: DiffSelectionType) throws -> DiffSelection","type":"method"},{"path":"\/documentation\/version_control\/diffselection\/getselectiontype()","title":"func getSelectionType() -> DiffSelectionType","type":"method"},{"path":"\/documentation\/version_control\/diffselection\/isselectable(lineindex:)","title":"func isSelectable(lineIndex: Int) -> Bool","type":"method"},{"path":"\/documentation\/version_control\/diffselection\/isselected(lineindex:)","title":"func isSelected(lineIndex: Int) -> Bool","type":"method"},{"path":"\/documentation\/version_control\/diffselection\/withlinesection(lineindex:selected:)","title":"func withLineSection(lineIndex: Int, selected: Bool) throws -> DiffSelection","type":"method"},{"path":"\/documentation\/version_control\/diffselection\/withrangeselection(from:length:selected:)","title":"func withRangeSelection(from: Int, length: Int, selected: Bool) throws -> DiffSelection","type":"method"},{"path":"\/documentation\/version_control\/diffselection\/withselectall()","title":"func withSelectAll() -> DiffSelection","type":"method"},{"path":"\/documentation\/version_control\/diffselection\/withselectnone()","title":"func withSelectNone() -> DiffSelection","type":"method"},{"path":"\/documentation\/version_control\/diffselection\/withselectablelines(selectablelines:)","title":"func withSelectableLines(selectableLines: Set<Int>) -> DiffSelection","type":"method"},{"path":"\/documentation\/version_control\/diffselection\/withtogglelineselection(lineiindex:)","title":"func withToggleLineSelection(lineIindex: Int) throws -> DiffSelection","type":"method"}],"path":"\/documentation\/version_control\/diffselection","title":"DiffSelection","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/fetchprogress\/description","title":"var description: String?","type":"property"},{"path":"\/documentation\/version_control\/fetchprogress\/kind","title":"var kind: String","type":"property"},{"path":"\/documentation\/version_control\/fetchprogress\/remote","title":"var remote: String","type":"property"},{"path":"\/documentation\/version_control\/fetchprogress\/title","title":"var title: String?","type":"property"},{"path":"\/documentation\/version_control\/fetchprogress\/value","title":"var value: Int","type":"property"}],"path":"\/documentation\/version_control\/fetchprogress","title":"FetchProgress","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/filechange\/init(path:status:)","title":"init(path: String, status: AppFileStatus?)","type":"init"}],"path":"\/documentation\/version_control\/filechange","title":"FileChange","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/ibinarydiff\/kind","title":"var kind: DiffType","type":"property"}],"path":"\/documentation\/version_control\/ibinarydiff","title":"IBinaryDiff","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/ilargetextdiff\/kind","title":"var kind: DiffType","type":"property"}],"path":"\/documentation\/version_control\/ilargetextdiff","title":"ILargeTextDiff","type":"class"},{"path":"\/documentation\/version_control\/irawdiff","title":"IRawDiff","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/itextdiff\/kind","title":"var kind: DiffType","type":"property"}],"path":"\/documentation\/version_control\/itextdiff","title":"ITextDiff","type":"class"},{"path":"\/documentation\/version_control\/itextdiffdata","title":"ITextDiffData","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/iunrenderablediff\/kind","title":"var kind: DiffType","type":"property"}],"path":"\/documentation\/version_control\/iunrenderablediff","title":"IUnrenderableDiff","type":"class"},{"path":"\/documentation\/version_control\/lineendingschange","title":"LineEndingsChange","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/multicommitoperationprogress\/currentcommitsummary","title":"var currentCommitSummary: String","type":"property"},{"path":"\/documentation\/version_control\/multicommitoperationprogress\/description","title":"var description: String?","type":"property"},{"path":"\/documentation\/version_control\/multicommitoperationprogress\/kind","title":"var kind: String","type":"property"},{"path":"\/documentation\/version_control\/multicommitoperationprogress\/position","title":"var position: Int","type":"property"},{"path":"\/documentation\/version_control\/multicommitoperationprogress\/title","title":"var title: String?","type":"property"},{"path":"\/documentation\/version_control\/multicommitoperationprogress\/totalcommitcount","title":"var totalCommitCount: Int","type":"property"},{"path":"\/documentation\/version_control\/multicommitoperationprogress\/value","title":"var value: Int","type":"property"}],"path":"\/documentation\/version_control\/multicommitoperationprogress","title":"MultiCommitOperationProgress","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/pullprogress\/description","title":"var description: String?","type":"property"},{"path":"\/documentation\/version_control\/pullprogress\/kind","title":"var kind: String","type":"property"},{"path":"\/documentation\/version_control\/pullprogress\/remote","title":"var remote: String","type":"property"},{"path":"\/documentation\/version_control\/pullprogress\/title","title":"var title: String?","type":"property"},{"path":"\/documentation\/version_control\/pullprogress\/value","title":"var value: Int","type":"property"}],"path":"\/documentation\/version_control\/pullprogress","title":"PullProgress","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/pushprogress\/branch","title":"var branch: String","type":"property"},{"path":"\/documentation\/version_control\/pushprogress\/description","title":"var description: String?","type":"property"},{"path":"\/documentation\/version_control\/pushprogress\/kind","title":"var kind: String","type":"property"},{"path":"\/documentation\/version_control\/pushprogress\/remote","title":"var remote: String","type":"property"},{"path":"\/documentation\/version_control\/pushprogress\/title","title":"var title: String?","type":"property"},{"path":"\/documentation\/version_control\/pushprogress\/value","title":"var value: Int","type":"property"}],"path":"\/documentation\/version_control\/pushprogress","title":"PushProgress","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/revertprogress\/description","title":"var description: String?","type":"property"},{"path":"\/documentation\/version_control\/revertprogress\/kind","title":"var kind: String","type":"property"},{"path":"\/documentation\/version_control\/revertprogress\/title","title":"var title: String?","type":"property"},{"path":"\/documentation\/version_control\/revertprogress\/value","title":"var value: Int","type":"property"}],"path":"\/documentation\/version_control\/revertprogress","title":"RevertProgress","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/shellclient\/run(_:)","title":"func run(String...) throws -> String","type":"method"},{"path":"\/documentation\/version_control\/shellclient\/runandcaptureoutput(arguments:workingdirectory:)","title":"func runAndCaptureOutput(arguments: [String], workingDirectory: String?) throws -> String","type":"method"},{"path":"\/documentation\/version_control\/shellclient\/runlive(_:)","title":"func runLive(String...) -> AnyPublisher<String, Never>","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/shellclient\/live()","title":"static func live() -> ShellClient","type":"method"}],"path":"\/documentation\/version_control\/shellclient","title":"ShellClient","type":"class"},{"path":"\/documentation\/version_control\/submoduleentry","title":"SubmoduleEntry","type":"class"},{"path":"\/documentation\/version_control\/updateindexoptions","title":"UpdateIndexOptions","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/workingdirectoryfilechange\/init(path:status:selection:)","title":"init(path: String, status: AppFileStatus?, selection: DiffSelection)","type":"init"}],"path":"\/documentation\/version_control\/workingdirectoryfilechange","title":"WorkingDirectoryFileChange","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/appfilestatus\/kind","title":"var kind: AppFileStatusKind","type":"property"},{"path":"\/documentation\/version_control\/appfilestatus\/submodulestatus","title":"var submoduleStatus: SubmoduleStatus?","type":"property"}],"path":"\/documentation\/version_control\/appfilestatus","title":"AppFileStatus","type":"protocol"},{"path":"\/documentation\/version_control\/conflictedfilestatus","title":"ConflictedFileStatus","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/gitfileitem\/gitstatus","title":"var gitStatus: GitType?","type":"property"},{"path":"\/documentation\/version_control\/gitfileitem\/url","title":"var url: URL","type":"property"}],"path":"\/documentation\/version_control\/gitfileitem","title":"GitFileItem","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/icheckoutprogress\/kind","title":"var kind: String","type":"property"},{"path":"\/documentation\/version_control\/icheckoutprogress\/targetbranch","title":"var targetBranch: String","type":"property"}],"path":"\/documentation\/version_control\/icheckoutprogress","title":"ICheckoutProgress","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/icloneprogress\/kind","title":"var kind: String","type":"property"}],"path":"\/documentation\/version_control\/icloneprogress","title":"ICloneProgress","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/icommitcontext\/amend","title":"var amend: Bool?","type":"property"},{"path":"\/documentation\/version_control\/icommitcontext\/description","title":"var description: String?","type":"property"},{"path":"\/documentation\/version_control\/icommitcontext\/summary","title":"var summary: String?","type":"property"},{"path":"\/documentation\/version_control\/icommitcontext\/trailers","title":"var trailers: [Trailer]?","type":"property"}],"path":"\/documentation\/version_control\/icommitcontext","title":"ICommitContext","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/idiff\/kind","title":"var kind: DiffType","type":"property"}],"path":"\/documentation\/version_control\/idiff","title":"IDiff","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/ifetchprogress\/kind","title":"var kind: String","type":"property"},{"path":"\/documentation\/version_control\/ifetchprogress\/remote","title":"var remote: String","type":"property"}],"path":"\/documentation\/version_control\/ifetchprogress","title":"IFetchProgress","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/imulticommitoperationprogress\/currentcommitsummary","title":"var currentCommitSummary: String","type":"property"},{"path":"\/documentation\/version_control\/imulticommitoperationprogress\/kind","title":"var kind: String","type":"property"},{"path":"\/documentation\/version_control\/imulticommitoperationprogress\/position","title":"var position: Int","type":"property"},{"path":"\/documentation\/version_control\/imulticommitoperationprogress\/totalcommitcount","title":"var totalCommitCount: Int","type":"property"}],"path":"\/documentation\/version_control\/imulticommitoperationprogress","title":"IMultiCommitOperationProgress","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/iprogress\/description","title":"var description: String?","type":"property"},{"path":"\/documentation\/version_control\/iprogress\/title","title":"var title: String?","type":"property"},{"path":"\/documentation\/version_control\/iprogress\/value","title":"var value: Int","type":"property"}],"path":"\/documentation\/version_control\/iprogress","title":"IProgress","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/ipullprogress\/kind","title":"var kind: String","type":"property"},{"path":"\/documentation\/version_control\/ipullprogress\/remote","title":"var remote: String","type":"property"}],"path":"\/documentation\/version_control\/ipullprogress","title":"IPullProgress","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/ipushprogress\/branch","title":"var branch: String","type":"property"},{"path":"\/documentation\/version_control\/ipushprogress\/kind","title":"var kind: String","type":"property"},{"path":"\/documentation\/version_control\/ipushprogress\/remote","title":"var remote: String","type":"property"}],"path":"\/documentation\/version_control\/ipushprogress","title":"IPushProgress","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/iremote\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/version_control\/iremote\/url","title":"var url: String","type":"property"}],"path":"\/documentation\/version_control\/iremote","title":"IRemote","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/irevertprogress\/kind","title":"var kind: String","type":"property"}],"path":"\/documentation\/version_control\/irevertprogress","title":"IRevertProgress","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/itrailer\/token","title":"var token: String","type":"property"},{"path":"\/documentation\/version_control\/itrailer\/value","title":"var value: String","type":"property"}],"path":"\/documentation\/version_control\/itrailer","title":"ITrailer","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/textdiff\/kind","title":"var kind: DiffType","type":"property"}],"path":"\/documentation\/version_control\/textdiff","title":"TextDiff","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"path":"\/documentation\/version_control\/add","title":"Add","type":"struct"},{"path":"\/documentation\/version_control\/apply","title":"Apply","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/auroranetworkingconstants\/bitbucketurl","title":"static let BitbucketURL: String","type":"property"},{"path":"\/documentation\/version_control\/auroranetworkingconstants\/githuburl","title":"static let GithubURL: String","type":"property"}],"path":"\/documentation\/version_control\/auroranetworkingconstants","title":"AuroraNetworkingConstants","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/blob\/init()","title":"init()","type":"init"}],"path":"\/documentation\/version_control\/blob","title":"Blob","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/branch\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/branch\/createbranch(directoryurl:name:startpoint:notrack:)","title":"func createBranch(directoryURL: URL, name: String, startPoint: String?, noTrack: Bool) throws","type":"method"},{"path":"\/documentation\/version_control\/branch\/deletelocalbranch(directoryurl:branchname:)","title":"func deleteLocalBranch(directoryURL: URL, branchName: String) throws -> Bool","type":"method"},{"path":"\/documentation\/version_control\/branch\/deleteremotebranch(directoryurl:remotename:remotebranchname:)","title":"func deleteRemoteBranch(directoryURL: URL, remoteName: String, remoteBranchName: String) throws -> Bool","type":"method"},{"path":"\/documentation\/version_control\/branch\/getbranches(directoryurl:prefixes:)","title":"func getBranches(directoryURL: URL, prefixes: [String]) async throws -> [GitBranch]","type":"method"},{"path":"\/documentation\/version_control\/branch\/getbranchesdifferingfromupstream(directoryurl:)","title":"func getBranchesDifferingFromUpstream(directoryURL: URL) throws -> [ITrackingBranch]","type":"method"},{"path":"\/documentation\/version_control\/branch\/getcurrentbranch(directoryurl:)","title":"func getCurrentBranch(directoryURL: URL) async throws -> String","type":"method"},{"path":"\/documentation\/version_control\/branch\/renamebranch(directoryurl:branch:newname:)","title":"func renameBranch(directoryURL: URL, branch: GitBranch, newName: String) throws","type":"method"}],"path":"\/documentation\/version_control\/branch","title":"Branch","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/branchutil\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/branchutil\/mergeremoteandlocalbranches(branches:)","title":"func mergeRemoteAndLocalBranches(branches: [GitBranch]) -> [GitBranch]","type":"method"}],"path":"\/documentation\/version_control\/branchutil","title":"BranchUtil","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/check\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/check\/checkifprojectisrepo(workspaceurl:)","title":"func checkIfProjectIsRepo(workspaceURL: URL) -> Bool","type":"method"}],"path":"\/documentation\/version_control\/check","title":"Check","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/checkoutindex\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/checkoutindex\/checkoutindex(directoryurl:paths:)","title":"func checkoutIndex(directoryURL: URL, paths: [String]) async throws","type":"method"}],"path":"\/documentation\/version_control\/checkoutindex","title":"CheckoutIndex","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/cherrypick\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/cherrypick\/abortcherrypick(directoryurl:)","title":"func abortCherryPick(directoryURL: URL) throws","type":"method"},{"path":"\/documentation\/version_control\/cherrypick\/ischerrypickheadfound(directoryurl:)","title":"func isCherryPickHeadFound(directoryURL: URL) -> Bool","type":"method"}],"path":"\/documentation\/version_control\/cherrypick","title":"CherryPick","type":"struct"},{"path":"\/documentation\/version_control\/cherrypicksnapshot","title":"CherryPickSnapshot","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/clone\/init()","title":"init()","type":"init"}],"path":"\/documentation\/version_control\/clone","title":"Clone","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/version_control\/commit\/==(_:_:)","title":"static func == (Commit, Commit) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/commit\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/version_control\/commit\/init(sha:shortsha:summary:body:author:commiter:parentshas:trailers:tags:)","title":"init(sha: String, shortSha: String, summary: String, body: String, author: CommitIdentity, commiter: CommitIdentity, parentShas: [String], trailers: [Trailer], tags: [String])","type":"init"},{"path":"\/documentation\/version_control\/commit\/init(sha:summary:)","title":"init(sha: String, summary: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/commit\/author","title":"var author: CommitIdentity","type":"property"},{"path":"\/documentation\/version_control\/commit\/authoredbycommitter","title":"var authoredByCommitter: Bool","type":"property"},{"path":"\/documentation\/version_control\/commit\/body","title":"var body: String","type":"property"},{"path":"\/documentation\/version_control\/commit\/bodynocoauthors","title":"var bodyNoCoAuthors: String?","type":"property"},{"path":"\/documentation\/version_control\/commit\/coauthors","title":"var coAuthors: [GitAuthor]?","type":"property"},{"path":"\/documentation\/version_control\/commit\/committer","title":"var committer: CommitIdentity","type":"property"},{"path":"\/documentation\/version_control\/commit\/id","title":"var id: UUID","type":"property"},{"path":"\/documentation\/version_control\/commit\/ismergecommit","title":"var isMergeCommit: Bool","type":"property"},{"path":"\/documentation\/version_control\/commit\/parentshas","title":"var parentSHAs: [String]","type":"property"},{"path":"\/documentation\/version_control\/commit\/sha","title":"var sha: String","type":"property"},{"path":"\/documentation\/version_control\/commit\/shortsha","title":"var shortSha: String","type":"property"},{"path":"\/documentation\/version_control\/commit\/summary","title":"var summary: String","type":"property"},{"path":"\/documentation\/version_control\/commit\/tags","title":"var tags: [String]","type":"property"},{"path":"\/documentation\/version_control\/commit\/trailers","title":"var trailers: [Trailer]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/version_control\/commit\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/version_control\/commit\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/version_control\/commit","title":"Commit","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/commitauthor\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/commitauthor\/email","title":"let email: String","type":"property"},{"path":"\/documentation\/version_control\/commitauthor\/name","title":"let name: String","type":"property"}],"path":"\/documentation\/version_control\/commitauthor","title":"CommitAuthor","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/commitcontext\/init(summary:description:amend:trailers:)","title":"init(summary: String?, description: String?, amend: Bool?, trailers: [Trailer]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/commitcontext\/amend","title":"var amend: Bool?","type":"property"},{"path":"\/documentation\/version_control\/commitcontext\/description","title":"var description: String?","type":"property"},{"path":"\/documentation\/version_control\/commitcontext\/summary","title":"var summary: String?","type":"property"},{"path":"\/documentation\/version_control\/commitcontext\/trailers","title":"var trailers: [Trailer]?","type":"property"}],"path":"\/documentation\/version_control\/commitcontext","title":"CommitContext","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/commithistory\/init(hash:commithash:message:author:authoremail:commiter:commiteremail:remoteurl:date:ismerge:)","title":"init(hash: String, commitHash: String, message: String, author: String, authorEmail: String, commiter: String, commiterEmail: String, remoteURL: URL?, date: Date, isMerge: Bool?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/commithistory\/author","title":"let author: String","type":"property"},{"path":"\/documentation\/version_control\/commithistory\/authoremail","title":"let authorEmail: String","type":"property"},{"path":"\/documentation\/version_control\/commithistory\/commitbaseurl","title":"var commitBaseURL: URL?","type":"property"},{"path":"\/documentation\/version_control\/commithistory\/commithash","title":"let commitHash: String","type":"property"},{"path":"\/documentation\/version_control\/commithistory\/commiter","title":"let commiter: String","type":"property"},{"path":"\/documentation\/version_control\/commithistory\/commiteremail","title":"let commiterEmail: String","type":"property"},{"path":"\/documentation\/version_control\/commithistory\/date","title":"let date: Date","type":"property"},{"path":"\/documentation\/version_control\/commithistory\/hash","title":"let hash: String","type":"property"},{"path":"\/documentation\/version_control\/commithistory\/id","title":"var id: UUID","type":"property"},{"path":"\/documentation\/version_control\/commithistory\/ismerge","title":"let isMerge: Bool?","type":"property"},{"path":"\/documentation\/version_control\/commithistory\/message","title":"let message: String","type":"property"},{"path":"\/documentation\/version_control\/commithistory\/remotestring","title":"var remoteString: String","type":"property"},{"path":"\/documentation\/version_control\/commithistory\/remoteurl","title":"let remoteURL: URL?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/version_control\/commithistory\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/version_control\/commithistory\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/version_control\/commithistory","title":"CommitHistory","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/commitidentity\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/commitidentity\/date","title":"let date: Date","type":"property"},{"path":"\/documentation\/version_control\/commitidentity\/email","title":"let email: String","type":"property"},{"path":"\/documentation\/version_control\/commitidentity\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/version_control\/commitidentity\/tzoffset","title":"let tzOffset: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/version_control\/commitidentity\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/version_control\/commitidentity\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/version_control\/commitidentity","title":"CommitIdentity","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/config\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/config\/addglobalconfigvalue(name:value:)","title":"func addGlobalConfigValue(name: String, value: String) throws","type":"method"},{"path":"\/documentation\/version_control\/config\/addglobalconfigvalueifmissing(name:value:)","title":"func addGlobalConfigValueIfMissing(name: String, value: String) throws","type":"method"},{"path":"\/documentation\/version_control\/config\/addsafedirectory(path:)","title":"func addSafeDirectory(path: String) throws","type":"method"},{"path":"\/documentation\/version_control\/config\/getconfigvalue(directoryurl:name:onlylocal:)","title":"func getConfigValue(directoryURL: URL, name: String, onlyLocal: Bool) throws -> String?","type":"method"},{"path":"\/documentation\/version_control\/config\/getconfigvalueinpath(name:path:onlylocal:type:)","title":"func getConfigValueInPath(name: String, path: URL, onlyLocal: Bool, type: Any?) throws -> String?","type":"method"},{"path":"\/documentation\/version_control\/config\/getglobalbooleanconfigvalue(path:name:)","title":"func getGlobalBooleanConfigValue(path: URL, name: String) throws -> Bool?","type":"method"},{"path":"\/documentation\/version_control\/config\/getglobalconfig()","title":"func getGlobalConfig() throws -> String?","type":"method"},{"path":"\/documentation\/version_control\/config\/getglobalconfigvalue(path:name:)","title":"func getGlobalConfigValue(path: URL, name: String) throws -> String?","type":"method"},{"path":"\/documentation\/version_control\/config\/removeconfigvalue(directoryurl:name:)","title":"func removeConfigValue(directoryURL: URL, name: String) throws","type":"method"},{"path":"\/documentation\/version_control\/config\/removeconfigvalueinpath(name:path:)","title":"func removeConfigValueInPath(name: String, path: String?) throws","type":"method"},{"path":"\/documentation\/version_control\/config\/removeglobalconfigvalue(name:)","title":"func removeGlobalConfigValue(name: String) throws","type":"method"},{"path":"\/documentation\/version_control\/config\/setconfigvalue(directoryurl:name:value:)","title":"func setConfigValue(directoryURL: URL, name: String, value: String) throws","type":"method"},{"path":"\/documentation\/version_control\/config\/setconfigvalueinpath(name:value:path:)","title":"func setConfigValueInPath(name: String, value: String, path: String?) throws -> String","type":"method"},{"path":"\/documentation\/version_control\/config\/setglobalconfigvalue(name:value:)","title":"func setGlobalConfigValue(name: String, value: String) throws -> String","type":"method"}],"path":"\/documentation\/version_control\/config","title":"Config","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/conflictswithmarkers\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/conflictswithmarkers\/kind","title":"var kind: AppFileStatusKind","type":"property"},{"path":"\/documentation\/version_control\/conflictswithmarkers\/submodulestatus","title":"var submoduleStatus: SubmoduleStatus?","type":"property"}],"path":"\/documentation\/version_control\/conflictswithmarkers","title":"ConflictsWithMarkers","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/copiedorrenamedfilestatus\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/copiedorrenamedfilestatus\/kind","title":"var kind: AppFileStatusKind","type":"property"},{"path":"\/documentation\/version_control\/copiedorrenamedfilestatus\/submodulestatus","title":"var submoduleStatus: SubmoduleStatus?","type":"property"}],"path":"\/documentation\/version_control\/copiedorrenamedfilestatus","title":"CopiedOrRenamedFileStatus","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/defaultbranch\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/defaultbranch\/suggestedbranchnames","title":"let suggestedBranchNames: [String]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/defaultbranch\/finddefaultbranch(directoryurl:branches:defaultremotename:)","title":"func findDefaultBranch(directoryURL: URL, branches: [GitBranch], defaultRemoteName: String?) throws -> GitBranch?","type":"method"},{"path":"\/documentation\/version_control\/defaultbranch\/getconfigureddefaultbranch(path:)","title":"func getConfiguredDefaultBranch(path: URL) throws -> String?","type":"method"},{"path":"\/documentation\/version_control\/defaultbranch\/getdefaultbranch()","title":"func getDefaultBranch() -> String","type":"method"},{"path":"\/documentation\/version_control\/defaultbranch\/setdefaultbranch(branchname:)","title":"func setDefaultBranch(branchName: String) throws -> String","type":"method"}],"path":"\/documentation\/version_control\/defaultbranch","title":"DefaultBranch","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/diff\/kind","title":"var kind: DiffType","type":"property"}],"path":"\/documentation\/version_control\/diff","title":"Diff","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/diffcheck\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/diffcheck\/getfileswithconflictmarkers(directoryurl:)","title":"func getFilesWithConflictMarkers(directoryURL: URL) throws -> [String : Int]","type":"method"}],"path":"\/documentation\/version_control\/diffcheck","title":"DiffCheck","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/diffindex\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/diffindex\/niltreesha","title":"let nilTreeSHA: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/diffindex\/getindexchanges(directoryurl:)","title":"func getIndexChanges(directoryURL: URL) throws -> [String : NoRenameIndexStatus]","type":"method"},{"path":"\/documentation\/version_control\/diffindex\/getindexstatus(status:)","title":"func getIndexStatus(status: String) throws -> IndexStatus","type":"method"},{"path":"\/documentation\/version_control\/diffindex\/getnorenameindexstatus(_:)","title":"func getNoRenameIndexStatus(String) throws -> NoRenameIndexStatus","type":"method"}],"path":"\/documentation\/version_control\/diffindex","title":"DiffIndex","type":"struct"},{"path":"\/documentation\/version_control\/fileutils","title":"FileUtils","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/formatpatch\/init()","title":"init()","type":"init"}],"path":"\/documentation\/version_control\/formatpatch","title":"FormatPatch","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/git\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/git\/initgitrepository(directoryurl:)","title":"func initGitRepository(directoryURL: URL) throws","type":"method"}],"path":"\/documentation\/version_control\/git","title":"Git","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/version_control\/gitauthor\/==(_:_:)","title":"static func == (GitAuthor, GitAuthor) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/gitauthor\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/version_control\/gitauthor\/init(name:email:)","title":"init(name: String?, email: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/gitauthor\/email","title":"var email: String","type":"property"},{"path":"\/documentation\/version_control\/gitauthor\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/gitauthor\/parse(nameaddr:)","title":"func parse(nameAddr: String) -> GitAuthor?","type":"method"},{"path":"\/documentation\/version_control\/gitauthor\/tostring()","title":"func toString() -> String","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/version_control\/gitauthor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/version_control\/gitauthor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/version_control\/gitauthor","title":"GitAuthor","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/gitbranch\/init(name:upstream:tip:type:ref:)","title":"init(name: String, upstream: String?, tip: IBranchTip?, type: BranchType, ref: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/gitbranch\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/version_control\/gitbranch\/namewithoutremote","title":"var nameWithoutRemote: String","type":"property"},{"path":"\/documentation\/version_control\/gitbranch\/ref","title":"let ref: String","type":"property"},{"path":"\/documentation\/version_control\/gitbranch\/remotename","title":"var remoteName: String?","type":"property"},{"path":"\/documentation\/version_control\/gitbranch\/tip","title":"let tip: IBranchTip?","type":"property"},{"path":"\/documentation\/version_control\/gitbranch\/type","title":"let type: BranchType","type":"property"},{"path":"\/documentation\/version_control\/gitbranch\/upstream","title":"let upstream: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/version_control\/gitbranch\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/version_control\/gitbranch\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/version_control\/gitbranch","title":"GitBranch","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/gitcheckout\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/gitcheckout\/checkoutbranch(directoryurl:account:branch:progresscallback:)","title":"func checkoutBranch(directoryURL: URL, account: IGitAccount?, branch: GitBranch, progressCallback: GitCheckout.ProgressCallback?) throws -> Bool","type":"method"},{"path":"\/documentation\/version_control\/gitcheckout\/checkoutcommit(directoryurl:account:commit:progresscallback:)","title":"func checkoutCommit(directoryURL: URL, account: IGitAccount?, commit: Commit, progressCallback: GitCheckout.ProgressCallback?) async throws -> Bool","type":"method"},{"path":"\/documentation\/version_control\/gitcheckout\/checkoutconflictedfile(directoryurl:file:resolution:)","title":"func checkoutConflictedFile(directoryURL: URL, file: WorkingDirectoryFileChange, resolution: ManualConflictResolution) throws","type":"method"},{"path":"\/documentation\/version_control\/gitcheckout\/checkoutpaths(directoryurl:paths:)","title":"func checkoutPaths(directoryURL: URL, paths: [String]) throws","type":"method"},{"path":"\/documentation\/version_control\/gitcheckout\/getbranchcheckoutargs(branch:enablerecursesubmodulesflag:)","title":"func getBranchCheckoutArgs(branch: GitBranch, enableRecurseSubmodulesFlag: Bool) -> [String]","type":"method"},{"path":"\/documentation\/version_control\/gitcheckout\/getcheckoutargs(progresscallback:)","title":"func getCheckoutArgs(progressCallback: GitCheckout.ProgressCallback?) -> [String]","type":"method"},{"path":"\/documentation\/version_control\/gitcheckout\/getcheckoutopts(directoryurl:title:target:progresscallback:initialdescription:)","title":"func getCheckoutOpts(directoryURL: URL, title: String, target: String, progressCallback: GitCheckout.ProgressCallback?, initialDescription: String?) throws -> IGitExecutionOptions","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/version_control\/gitcheckout\/progresscallback","title":"GitCheckout.ProgressCallback","type":"typealias"}],"path":"\/documentation\/version_control\/gitcheckout","title":"GitCheckout","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/gitcommit\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/gitcommit\/createcommit(directoryurl:message:files:amend:)","title":"func createCommit(directoryURL: URL, message: String, files: [WorkingDirectoryFileChange], amend: Bool) throws -> String","type":"method"}],"path":"\/documentation\/version_control\/gitcommit","title":"GitCommit","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/gitdescription\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/gitdescription\/getgitdescription(directoryurl:)","title":"func getGitDescription(directoryURL: URL) throws -> String","type":"method"},{"path":"\/documentation\/version_control\/gitdescription\/writegitdescription(directoryurl:description:)","title":"func writeGitDescription(directoryURL: URL, description: String) throws","type":"method"}],"path":"\/documentation\/version_control\/gitdescription","title":"GitDescription","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/gitdiff\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/gitdiff\/isdifftolarge(diff:)","title":"func isDiffToLarge(diff: IRawDiff) -> Bool","type":"method"}],"path":"\/documentation\/version_control\/gitdiff","title":"GitDiff","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/githubapi\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/githubapi\/fetchallopenpullrequests(owner:name:completion:)","title":"func fetchAllOpenPullRequests(owner: String, name: String, completion: ([IAPIPullRequest]?) -> Void)","type":"method"},{"path":"\/documentation\/version_control\/githubapi\/fetchissuecomments(owner:name:issuenumber:completion:)","title":"func fetchIssueComments(owner: String, name: String, issueNumber: String, completion: ([IAPIComment]?) -> Void)","type":"method"},{"path":"\/documentation\/version_control\/githubapi\/fetchmentionables(owner:name:etag:)","title":"func fetchMentionables(owner: String, name: String, etag: String?) throws -> IAPIMentionableResponse?","type":"method"},{"path":"\/documentation\/version_control\/githubapi\/fetchprotectedbranches(owner:name:completion:)","title":"func fetchProtectedBranches(owner: String, name: String, completion: ([IAPIBranch]?) -> Void)","type":"method"},{"path":"\/documentation\/version_control\/githubapi\/fetchpullrequest(owner:name:prnumber:completion:)","title":"func fetchPullRequest(owner: String, name: String, prNumber: String, completion: (IAPIPullRequest?) -> Void)","type":"method"},{"path":"\/documentation\/version_control\/githubapi\/fetchpullrequestcomments(owner:name:prnumber:completion:)","title":"func fetchPullRequestComments(owner: String, name: String, prNumber: String, completion: ([IAPIComment]?) -> Void)","type":"method"},{"path":"\/documentation\/version_control\/githubapi\/fetchpullrequestreview(owner:name:prnumber:reviewid:completion:)","title":"func fetchPullRequestReview(owner: String, name: String, prNumber: String, reviewId: String, completion: (IAPIPullRequestReview?) -> Void)","type":"method"},{"path":"\/documentation\/version_control\/githubapi\/fetchpullrequestreviewcomments(owner:name:prnumber:reviewid:completion:)","title":"func fetchPullRequestReviewComments(owner: String, name: String, prNumber: String, reviewId: String, completion: ([IAPIComment]?) -> Void)","type":"method"},{"path":"\/documentation\/version_control\/githubapi\/fetchpullrequestreviews(owner:name:prnumber:completion:)","title":"func fetchPullRequestReviews(owner: String, name: String, prNumber: String, completion: ([IAPIPullRequestReview]?) -> Void)","type":"method"},{"path":"\/documentation\/version_control\/githubapi\/fetchreporulesforbranch(owner:name:branch:completion:)","title":"func fetchRepoRulesForBranch(owner: String, name: String, branch: String, completion: ([IAPIRepoRule]?) -> Void)","type":"method"},{"path":"\/documentation\/version_control\/githubapi\/rerequestchecksuite(owner:name:checksuiteid:completion:)","title":"func rerequestCheckSuite(owner: String, name: String, checkSuiteId: Int, completion: (Bool) -> Void)","type":"method"},{"path":"\/documentation\/version_control\/githubapi\/rerunfailedjobs(owner:name:workflowrunid:completion:)","title":"func rerunFailedJobs(owner: String, name: String, workflowRunId: Int, completion: (Bool) -> Void)","type":"method"},{"path":"\/documentation\/version_control\/githubapi\/rerunjob(owner:name:jobid:completion:)","title":"func rerunJob(owner: String, name: String, jobId: Int, completion: (Bool) -> Void)","type":"method"}],"path":"\/documentation\/version_control\/githubapi","title":"GitHubAPI","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/githubactions\/openbranchongithub(viewtype:directoryurl:)","title":"func openBranchOnGitHub(viewType: GitHubViewType, directoryURL: URL) throws","type":"method"},{"path":"\/documentation\/version_control\/githubactions\/openissuecreationongithub(directoryurl:)","title":"func openIssueCreationOnGitHub(directoryURL: URL) throws","type":"method"}],"path":"\/documentation\/version_control\/githubactions","title":"GitHubActions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/githubemail\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/githubemail\/getlegacystealthemailforuser(login:)","title":"func getLegacyStealthEmailForUser(login: String) -> String","type":"method"},{"path":"\/documentation\/version_control\/githubemail\/getstealthemailforuser(id:login:)","title":"func getStealthEmailForUser(id: Int, login: String) -> String","type":"method"},{"path":"\/documentation\/version_control\/githubemail\/getstealthemailhostforendpoint()","title":"func getStealthEmailHostForEndpoint() -> String","type":"method"},{"path":"\/documentation\/version_control\/githubemail\/isattributableemailfor(account:email:)","title":"func isAttributableEmailFor(account: Account, email: String) -> Bool","type":"method"},{"path":"\/documentation\/version_control\/githubemail\/isemailpublic(email:)","title":"func isEmailPublic(email: IAPIEmail) -> Bool","type":"method"},{"path":"\/documentation\/version_control\/githubemail\/lookuppreferredemail(account:)","title":"func lookupPreferredEmail(account: Account) -> String","type":"method"}],"path":"\/documentation\/version_control\/githubemail","title":"GitHubEmail","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/gitignore\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/gitignore\/appendignorefile(directoryurl:filepath:)","title":"func appendIgnoreFile(directoryURL: URL, filePath: [String]) throws","type":"method"},{"path":"\/documentation\/version_control\/gitignore\/appendignorerule(directoryurl:patterns:)","title":"func appendIgnoreRule(directoryURL: URL, patterns: [String]) throws","type":"method"},{"path":"\/documentation\/version_control\/gitignore\/escapegitspecialcharacters(pattern:)","title":"func escapeGitSpecialCharacters(pattern: String) -> String","type":"method"},{"path":"\/documentation\/version_control\/gitignore\/readgitignoreatroot(directoryurl:)","title":"func readGitIgnoreAtRoot(directoryURL: URL) throws -> String?","type":"method"}],"path":"\/documentation\/version_control\/gitignore","title":"GitIgnore","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/gitlog\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/gitlog\/getchangedfilesbetweenrefs(directoryurl:currentsha:sha:)","title":"func getChangedFilesBetweenRefs(directoryURL: URL, currentSha: String, sha: String) async throws -> [String]","type":"method"},{"path":"\/documentation\/version_control\/gitlog\/getcommits(directoryurl:fileurl:revisionrange:limit:skip:additionalargs:)","title":"func getCommits(directoryURL: URL, fileURL: String, revisionRange: String?, limit: Int?, skip: Int?, additionalArgs: [String]) throws -> [Commit]","type":"method"},{"path":"\/documentation\/version_control\/gitlog\/getcommitsbetweenshaandupstreambranch(directoryurl:sha:upstreambranch:)","title":"func getCommitsBetweenSHAAndUpstreamBranch(directoryURL: URL, sha: String, upstreamBranch: String) throws -> [String]","type":"method"}],"path":"\/documentation\/version_control\/gitlog","title":"GitLog","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/gitpull\/init()","title":"init()","type":"init"}],"path":"\/documentation\/version_control\/gitpull","title":"GitPull","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/version_control\/gitremote\/==(_:_:)","title":"static func == (GitRemote, GitRemote) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/gitremote\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/version_control\/gitremote\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/version_control\/gitremote\/url","title":"var url: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/version_control\/gitremote\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/version_control\/gitremote\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/version_control\/gitremote","title":"GitRemote","type":"struct"},{"path":"\/documentation\/version_control\/gitrevert","title":"GitRevert","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/gitshell\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/gitshell\/git(args:path:name:options:)","title":"func git(args: [String], path: URL, name: String, options: IGitExecutionOptions?) throws -> IGitResult","type":"method"}],"path":"\/documentation\/version_control\/gitshell","title":"GitShell","type":"struct"},{"path":"\/documentation\/version_control\/gitsquash","title":"GitSquash","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/gitstage\/init()","title":"init()","type":"init"}],"path":"\/documentation\/version_control\/gitstage","title":"GitStage","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/gitstatus\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/gitstatus\/getstatus(directoryurl:)","title":"func getStatus(directoryURL: URL) async throws -> StatusResult?","type":"method"}],"path":"\/documentation\/version_control\/gitstatus","title":"GitStatus","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/iapibranch\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/iapibranch\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/version_control\/iapibranch\/protected","title":"let protected: Bool","type":"property"}],"path":"\/documentation\/version_control\/iapibranch","title":"IAPIBranch","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/iapicomment\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/iapicomment\/body","title":"let body: String","type":"property"},{"path":"\/documentation\/version_control\/iapicomment\/created_at","title":"let created_at: String","type":"property"},{"path":"\/documentation\/version_control\/iapicomment\/html_url","title":"let html_url: String","type":"property"},{"path":"\/documentation\/version_control\/iapicomment\/id","title":"let id: Int","type":"property"},{"path":"\/documentation\/version_control\/iapicomment\/user","title":"let user: IAPIIdentity","type":"property"}],"path":"\/documentation\/version_control\/iapicomment","title":"IAPIComment","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/iapiemail\/init(email:verified:primary:visibility:)","title":"init(email: String, verified: Bool, primary: Bool, visibility: EmailVisibility)","type":"init"},{"path":"\/documentation\/version_control\/iapiemail\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/version_control\/iapiemail","title":"IAPIEmail","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/iapiidentity\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/iapiidentity\/avatar_url","title":"let avatar_url: String","type":"property"},{"path":"\/documentation\/version_control\/iapiidentity\/html_url","title":"let html_url: String","type":"property"},{"path":"\/documentation\/version_control\/iapiidentity\/id","title":"let id: Int","type":"property"},{"path":"\/documentation\/version_control\/iapiidentity\/login","title":"let login: String","type":"property"},{"path":"\/documentation\/version_control\/iapiidentity\/type","title":"let type: GitHubAccountType","type":"property"}],"path":"\/documentation\/version_control\/iapiidentity","title":"IAPIIdentity","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/iapimentionableresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/iapimentionableresponse\/etag","title":"let etag: String?","type":"property"},{"path":"\/documentation\/version_control\/iapimentionableresponse\/users","title":"let users: [IAPIMentionableUser]","type":"property"}],"path":"\/documentation\/version_control\/iapimentionableresponse","title":"IAPIMentionableResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/iapimentionableuser\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/iapimentionableuser\/avatar_url","title":"let avatar_url: String","type":"property"},{"path":"\/documentation\/version_control\/iapimentionableuser\/email","title":"let email: String","type":"property"},{"path":"\/documentation\/version_control\/iapimentionableuser\/login","title":"let login: String","type":"property"},{"path":"\/documentation\/version_control\/iapimentionableuser\/name","title":"let name: String?","type":"property"}],"path":"\/documentation\/version_control\/iapimentionableuser","title":"IAPIMentionableUser","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/iapipullrequest\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/iapipullrequest\/base","title":"let base: IAPIPullRequestRef","type":"property"},{"path":"\/documentation\/version_control\/iapipullrequest\/body","title":"let body: String","type":"property"},{"path":"\/documentation\/version_control\/iapipullrequest\/created_at","title":"let created_at: String","type":"property"},{"path":"\/documentation\/version_control\/iapipullrequest\/draft","title":"let draft: Bool?","type":"property"},{"path":"\/documentation\/version_control\/iapipullrequest\/head","title":"let head: IAPIPullRequestRef","type":"property"},{"path":"\/documentation\/version_control\/iapipullrequest\/number","title":"let number: Int","type":"property"},{"path":"\/documentation\/version_control\/iapipullrequest\/state","title":"let state: String","type":"property"},{"path":"\/documentation\/version_control\/iapipullrequest\/title","title":"let title: String","type":"property"},{"path":"\/documentation\/version_control\/iapipullrequest\/updated_at","title":"let updated_at: String","type":"property"},{"path":"\/documentation\/version_control\/iapipullrequest\/user","title":"let user: IAPIIdentity","type":"property"}],"path":"\/documentation\/version_control\/iapipullrequest","title":"IAPIPullRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/iapipullrequestref\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/iapipullrequestref\/ref","title":"let ref: String","type":"property"},{"path":"\/documentation\/version_control\/iapipullrequestref\/repo","title":"let repo: IAPIRepository?","type":"property"},{"path":"\/documentation\/version_control\/iapipullrequestref\/sha","title":"let sha: String","type":"property"}],"path":"\/documentation\/version_control\/iapipullrequestref","title":"IAPIPullRequestRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/iapipullrequestreview\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/iapipullrequestreview\/body","title":"let body: String?","type":"property"},{"path":"\/documentation\/version_control\/iapipullrequestreview\/commit_id","title":"let commit_id: String","type":"property"},{"path":"\/documentation\/version_control\/iapipullrequestreview\/html_url","title":"let html_url: String","type":"property"},{"path":"\/documentation\/version_control\/iapipullrequestreview\/id","title":"let id: Int","type":"property"},{"path":"\/documentation\/version_control\/iapipullrequestreview\/node_id","title":"let node_id: String","type":"property"},{"path":"\/documentation\/version_control\/iapipullrequestreview\/state","title":"let state: APIPullRequestReviewState","type":"property"},{"path":"\/documentation\/version_control\/iapipullrequestreview\/submitted_at","title":"let submitted_at: String?","type":"property"},{"path":"\/documentation\/version_control\/iapipullrequestreview\/user","title":"let user: IAPIIdentity","type":"property"}],"path":"\/documentation\/version_control\/iapipullrequestreview","title":"IAPIPullRequestReview","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/iapireporule\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/iapireporule\/parameters","title":"let parameters: IAPIRepoRuleMetadataParameters?","type":"property"},{"path":"\/documentation\/version_control\/iapireporule\/ruleset_id","title":"let ruleset_id: Int","type":"property"},{"path":"\/documentation\/version_control\/iapireporule\/type","title":"let type: APIRepoRuleType","type":"property"}],"path":"\/documentation\/version_control\/iapireporule","title":"IAPIRepoRule","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/iapireporulemetadataparameters\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/iapireporulemetadataparameters\/name","title":"let name: String?","type":"property"},{"path":"\/documentation\/version_control\/iapireporulemetadataparameters\/negate","title":"let negate: Bool?","type":"property"},{"path":"\/documentation\/version_control\/iapireporulemetadataparameters\/operator","title":"let `operator`: APIRepoRuleMetadataOperator?","type":"property"},{"path":"\/documentation\/version_control\/iapireporulemetadataparameters\/pattern","title":"let pattern: String?","type":"property"}],"path":"\/documentation\/version_control\/iapireporulemetadataparameters","title":"IAPIRepoRuleMetadataParameters","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/iapireporuleset\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/iapireporuleset\/current_user_can_bypass","title":"let current_user_can_bypass: UserCanBypass","type":"property"},{"path":"\/documentation\/version_control\/iapireporuleset\/id","title":"let id: Int","type":"property"}],"path":"\/documentation\/version_control\/iapireporuleset","title":"IAPIRepoRuleset","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/iapirepository\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/version_control\/iapirepository","title":"IAPIRepository","type":"struct"},{"path":"\/documentation\/version_control\/iaheadbehind","title":"IAheadBehind","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/ibitbucketcomment\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/ibitbucketcomment\/body","title":"let body: String","type":"property"},{"path":"\/documentation\/version_control\/ibitbucketcomment\/created_at","title":"let created_at: String","type":"property"},{"path":"\/documentation\/version_control\/ibitbucketcomment\/html_url","title":"let html_url: String","type":"property"},{"path":"\/documentation\/version_control\/ibitbucketcomment\/id","title":"let id: Int","type":"property"},{"path":"\/documentation\/version_control\/ibitbucketcomment\/user","title":"let user: IAPIIdentity","type":"property"}],"path":"\/documentation\/version_control\/ibitbucketcomment","title":"IBitbucketComment","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/ibranchtip\/author","title":"let author: CommitIdentity","type":"property"},{"path":"\/documentation\/version_control\/ibranchtip\/sha","title":"let sha: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/version_control\/ibranchtip\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/version_control\/ibranchtip\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/version_control\/ibranchtip","title":"IBranchTip","type":"struct"},{"path":"\/documentation\/version_control\/igitaccount","title":"IGitAccount","type":"struct"},{"path":"\/documentation\/version_control\/igitexecutionoptions","title":"IGitExecutionOptions","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/igitresult\/combinedoutput","title":"let combinedOutput: String","type":"property"},{"path":"\/documentation\/version_control\/igitresult\/exitcode","title":"let exitCode: Int","type":"property"},{"path":"\/documentation\/version_control\/igitresult\/giterror","title":"let gitError: GitError?","type":"property"},{"path":"\/documentation\/version_control\/igitresult\/giterrordescription","title":"var gitErrorDescription: String?","type":"property"},{"path":"\/documentation\/version_control\/igitresult\/path","title":"let path: String","type":"property"},{"path":"\/documentation\/version_control\/igitresult\/stderr","title":"var stderr: String","type":"property"},{"path":"\/documentation\/version_control\/igitresult\/stdout","title":"var stdout: String","type":"property"}],"path":"\/documentation\/version_control\/igitresult","title":"IGitResult","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/iimagediff\/kind","title":"var kind: DiffType","type":"property"}],"path":"\/documentation\/version_control\/iimagediff","title":"IImageDiff","type":"struct"},{"path":"\/documentation\/version_control\/ilocalbranch","title":"ILocalBranch","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/isubmodulediff\/kind","title":"var kind: DiffType","type":"property"}],"path":"\/documentation\/version_control\/isubmodulediff","title":"ISubmoduleDiff","type":"struct"},{"path":"\/documentation\/version_control\/itrackingbranch","title":"ITrackingBranch","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/interprettrailers\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/interprettrailers\/gettrailerseparatorcharacters(directoryurl:)","title":"func getTrailerSeparatorCharacters(directoryURL: URL) throws -> String","type":"method"},{"path":"\/documentation\/version_control\/interprettrailers\/iscoauthoredbytrailer(trailer:)","title":"func isCoAuthoredByTrailer(trailer: Trailer) -> Bool","type":"method"},{"path":"\/documentation\/version_control\/interprettrailers\/mergetrailers(directoryurl:commitmessage:trailers:unfold:)","title":"func mergeTrailers(directoryURL: URL, commitMessage: String, trailers: [ITrailer], unfold: Bool) throws -> String","type":"method"},{"path":"\/documentation\/version_control\/interprettrailers\/parserawunfoldedtrailers(trailers:seperators:)","title":"func parseRawUnfoldedTrailers(trailers: String, seperators: String) -> [Trailer]","type":"method"},{"path":"\/documentation\/version_control\/interprettrailers\/parsesingleunfoldedtrailer(line:separators:)","title":"func parseSingleUnfoldedTrailer(line: String, separators: String) -> Trailer?","type":"method"},{"path":"\/documentation\/version_control\/interprettrailers\/parsetrailers(directoryurl:commitmessage:)","title":"func parseTrailers(directoryURL: URL, commitMessage: String) throws -> [ITrailer]","type":"method"}],"path":"\/documentation\/version_control\/interprettrailers","title":"InterpretTrailers","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/job\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/job\/jobs","title":"let jobs: [Jobs]","type":"property"},{"path":"\/documentation\/version_control\/job\/totalcount","title":"let totalCount: Int","type":"property"}],"path":"\/documentation\/version_control\/job","title":"Job","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/jobsteps\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/jobsteps\/completedat","title":"let completedAt: String","type":"property"},{"path":"\/documentation\/version_control\/jobsteps\/conclusion","title":"let conclusion: String","type":"property"},{"path":"\/documentation\/version_control\/jobsteps\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/version_control\/jobsteps\/number","title":"let number: Int","type":"property"},{"path":"\/documentation\/version_control\/jobsteps\/startedat","title":"let startedAt: String","type":"property"},{"path":"\/documentation\/version_control\/jobsteps\/status","title":"let status: String","type":"property"}],"path":"\/documentation\/version_control\/jobsteps","title":"JobSteps","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/jobs\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/jobs\/completedat","title":"let completedAt: String","type":"property"},{"path":"\/documentation\/version_control\/jobs\/conclusion","title":"let conclusion: String","type":"property"},{"path":"\/documentation\/version_control\/jobs\/htmlurl","title":"let htmlURL: String","type":"property"},{"path":"\/documentation\/version_control\/jobs\/id","title":"let id: Int","type":"property"},{"path":"\/documentation\/version_control\/jobs\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/version_control\/jobs\/runattempt","title":"let runAttempt: Int","type":"property"},{"path":"\/documentation\/version_control\/jobs\/runid","title":"let runId: Int","type":"property"},{"path":"\/documentation\/version_control\/jobs\/runurl","title":"let runURL: String","type":"property"},{"path":"\/documentation\/version_control\/jobs\/runnergroupname","title":"let runnerGroupName: String?","type":"property"},{"path":"\/documentation\/version_control\/jobs\/runnername","title":"let runnerName: String?","type":"property"},{"path":"\/documentation\/version_control\/jobs\/startedat","title":"let startedAt: String","type":"property"},{"path":"\/documentation\/version_control\/jobs\/status","title":"let status: String","type":"property"},{"path":"\/documentation\/version_control\/jobs\/steps","title":"let steps: [JobSteps]","type":"property"},{"path":"\/documentation\/version_control\/jobs\/url","title":"let url: String","type":"property"}],"path":"\/documentation\/version_control\/jobs","title":"Jobs","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/lfs\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/lfs\/filesnottrackedbylfs(directoryurl:filepaths:)","title":"func filesNotTrackedByLFS(directoryURL: URL, filePaths: [String]) throws -> [String]","type":"method"},{"path":"\/documentation\/version_control\/lfs\/installgloballfsfilters(force:)","title":"func installGlobalLFSFilters(force: Bool) throws","type":"method"},{"path":"\/documentation\/version_control\/lfs\/installlfshooks(directoryurl:force:)","title":"func installLFSHooks(directoryURL: URL, force: Bool) throws","type":"method"},{"path":"\/documentation\/version_control\/lfs\/istrackedbylfs(directoryurl:path:)","title":"func isTrackedByLFS(directoryURL: URL, path: String) throws -> Bool","type":"method"},{"path":"\/documentation\/version_control\/lfs\/isusinglfs(directoryurl:)","title":"func isUsingLFS(directoryURL: URL) throws -> Bool","type":"method"}],"path":"\/documentation\/version_control\/lfs","title":"LFS","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/liveshellclient\/shellclient","title":"var shellClient: ShellClient","type":"property"}],"path":"\/documentation\/version_control\/liveshellclient","title":"LiveShellClient","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/manualconflict\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/manualconflict\/kind","title":"var kind: AppFileStatusKind","type":"property"},{"path":"\/documentation\/version_control\/manualconflict\/submodulestatus","title":"var submoduleStatus: SubmoduleStatus?","type":"property"}],"path":"\/documentation\/version_control\/manualconflict","title":"ManualConflict","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/manualconflictdetails\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/version_control\/manualconflictdetails","title":"ManualConflictDetails","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/manualconflictentry\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/version_control\/manualconflictentry","title":"ManualConflictEntry","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/mediadiff\/init()","title":"init()","type":"init"}],"path":"\/documentation\/version_control\/mediadiff","title":"MediaDiff","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/merge\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/merge\/abortmerge(directoryurl:)","title":"func abortMerge(directoryURL: URL) throws","type":"method"},{"path":"\/documentation\/version_control\/merge\/getmergebase(directoryurl:firstcommitish:secondcommitish:)","title":"func getMergeBase(directoryURL: URL, firstCommitish: String, secondCommitish: String) throws -> String?","type":"method"},{"path":"\/documentation\/version_control\/merge\/ismergeheadset(directoryurl:)","title":"func isMergeHeadSet(directoryURL: URL) throws -> Bool","type":"method"},{"path":"\/documentation\/version_control\/merge\/issquashmsgset(directoryurl:)","title":"func isSquashMsgSet(directoryURL: URL) throws -> Bool","type":"method"},{"path":"\/documentation\/version_control\/merge\/merge(directoryurl:branch:issquash:)","title":"func merge(directoryURL: URL, branch: String, isSquash: Bool) throws -> MergeResult","type":"method"}],"path":"\/documentation\/version_control\/merge","title":"Merge","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/plainfilestatus\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/plainfilestatus\/kind","title":"var kind: AppFileStatusKind","type":"property"},{"path":"\/documentation\/version_control\/plainfilestatus\/submodulestatus","title":"var submoduleStatus: SubmoduleStatus?","type":"property"}],"path":"\/documentation\/version_control\/plainfilestatus","title":"PlainFileStatus","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/push\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/push\/push(directoryurl:remote:localbranch:remotebranch:tagstopush:options:progresscallback:)","title":"func push(directoryURL: URL, remote: IRemote, localBranch: String, remoteBranch: String?, tagsToPush: [String]?, options: PushOptions, progressCallback: ((IPushProgress) -> Void)?) throws","type":"method"}],"path":"\/documentation\/version_control\/push","title":"Push","type":"struct"},{"path":"\/documentation\/version_control\/pushoptions","title":"PushOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/rm\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/rm\/removeconflictedfile(directoryurl:file:)","title":"func removeConflictedFile(directoryURL: URL, file: WorkingDirectoryFileChange) throws","type":"method"},{"path":"\/documentation\/version_control\/rm\/unstageallfiles(directoryurl:)","title":"func unstageAllFiles(directoryURL: URL) throws","type":"method"}],"path":"\/documentation\/version_control\/rm","title":"RM","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/rebase\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/rebase\/abortrebase(directoryurl:)","title":"func abortRebase(directoryURL: URL) throws","type":"method"}],"path":"\/documentation\/version_control\/rebase","title":"Rebase","type":"struct"},{"path":"\/documentation\/version_control\/rebaseinternalstate","title":"RebaseInternalState","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/reflog\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/reflog\/getrecentbranches(directoryurl:limit:)","title":"func getRecentBranches(directoryURL: URL, limit: Int) async throws -> [String]","type":"method"}],"path":"\/documentation\/version_control\/reflog","title":"Reflog","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/refs\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/refs\/formataslocalref(name:)","title":"func formatAsLocalRef(name: String) -> String","type":"method"},{"path":"\/documentation\/version_control\/refs\/getsymbolicref(directoryurl:ref:)","title":"func getSymbolicRef(directoryURL: URL, ref: String) throws -> String?","type":"method"}],"path":"\/documentation\/version_control\/refs","title":"Refs","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/remote\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/remote\/addremote(directoryurl:name:url:)","title":"func addRemote(directoryURL: URL, name: String, url: String) throws -> GitRemote?","type":"method"},{"path":"\/documentation\/version_control\/remote\/getlatestcommithashandref(directoryurl:repourl:branch:)","title":"func getLatestCommitHashAndRef(directoryURL: URL, repoURL: String, branch: String) async throws -> (commitHash: String, ref: String)","type":"method"},{"path":"\/documentation\/version_control\/remote\/getremotehead(directoryurl:remote:)","title":"func getRemoteHEAD(directoryURL: URL, remote: String) throws -> String?","type":"method"},{"path":"\/documentation\/version_control\/remote\/getremoteurl(directoryurl:name:)","title":"func getRemoteURL(directoryURL: URL, name: String) async throws -> String?","type":"method"},{"path":"\/documentation\/version_control\/remote\/getremotes(directoryurl:)","title":"func getRemotes(directoryURL: URL) throws -> [GitRemote]","type":"method"},{"path":"\/documentation\/version_control\/remote\/removeremote(directoryurl:name:)","title":"func removeRemote(directoryURL: URL, name: String) throws","type":"method"},{"path":"\/documentation\/version_control\/remote\/setremoteurl(directoryurl:name:url:)","title":"func setRemoteURL(directoryURL: URL, name: String, url: String) throws -> Bool","type":"method"},{"path":"\/documentation\/version_control\/remote\/updateremotehead(directoryurl:remote:)","title":"func updateRemoteHEAD(directoryURL: URL, remote: IRemote) throws","type":"method"}],"path":"\/documentation\/version_control\/remote","title":"Remote","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/reset\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/reset\/reset(directoryurl:mode:ref:)","title":"func reset(directoryURL: URL, mode: GitResetMode, ref: String) throws -> Bool","type":"method"},{"path":"\/documentation\/version_control\/reset\/resetmodetoargs(mode:ref:)","title":"func resetModeToArgs(mode: GitResetMode, ref: String) -> [String]","type":"method"},{"path":"\/documentation\/version_control\/reset\/resetpaths(directoryurl:mode:ref:paths:)","title":"func resetPaths(directoryURL: URL, mode: GitResetMode, ref: String, paths: [String]) throws","type":"method"},{"path":"\/documentation\/version_control\/reset\/unstageall(directoryurl:)","title":"func unstageAll(directoryURL: URL) throws -> Bool","type":"method"}],"path":"\/documentation\/version_control\/reset","title":"Reset","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/revlist\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/revlist\/getaheadbehind(directoryurl:range:)","title":"func getAheadBehind(directoryURL: URL, range: String) throws -> IAheadBehind?","type":"method"},{"path":"\/documentation\/version_control\/revlist\/getcommitsbetweencommits(directoryurl:basebranchsha:targetbranchsha:)","title":"func getCommitsBetweenCommits(directoryURL: URL, baseBranchSha: String, targetBranchSha: String) throws -> [Commit]?","type":"method"},{"path":"\/documentation\/version_control\/revlist\/getcommitsinrange(directoryurl:range:)","title":"func getCommitsInRange(directoryURL: URL, range: String) throws -> [Commit]?","type":"method"},{"path":"\/documentation\/version_control\/revlist\/revrange(from:to:)","title":"func revRange(from: String, to: String) -> String","type":"method"}],"path":"\/documentation\/version_control\/revlist","title":"RevList","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/revparse\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/revparse\/getlatestcommithash(directoryurl:)","title":"func getLatestCommitHash(directoryURL: URL) throws -> String","type":"method"}],"path":"\/documentation\/version_control\/revparse","title":"RevParse","type":"struct"},{"children":[{"title":"Classes","type":"groupMarker"},{"path":"\/documentation\/version_control\/stash\/stashresult","title":"Stash.StashResult","type":"class"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/stash\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/stash\/createaestashmessage(branchname:)","title":"func createAEStashMessage(branchName: String) -> String","type":"method"},{"path":"\/documentation\/version_control\/stash\/getlastaestashentryforbranch(directoryurl:branch:)","title":"func getLastAEStashEntryForBranch(directoryURL: URL, branch: String) throws","type":"method"}],"path":"\/documentation\/version_control\/stash","title":"Stash","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/statusresult\/branchaheadbehind","title":"let branchAheadBehind: IAheadBehind?","type":"property"},{"path":"\/documentation\/version_control\/statusresult\/currentbranch","title":"let currentBranch: String?","type":"property"},{"path":"\/documentation\/version_control\/statusresult\/currenttip","title":"let currentTip: String?","type":"property"},{"path":"\/documentation\/version_control\/statusresult\/currentupstreambranch","title":"let currentUpstreamBranch: String?","type":"property"},{"path":"\/documentation\/version_control\/statusresult\/doconflictedfilesexist","title":"let doConflictedFilesExist: Bool","type":"property"},{"path":"\/documentation\/version_control\/statusresult\/exists","title":"let exists: Bool","type":"property"},{"path":"\/documentation\/version_control\/statusresult\/ischerrypickingheadfound","title":"let isCherryPickingHeadFound: Bool","type":"property"},{"path":"\/documentation\/version_control\/statusresult\/mergeheadfound","title":"let mergeHeadFound: Bool","type":"property"},{"path":"\/documentation\/version_control\/statusresult\/rebaseinternalstate","title":"let rebaseInternalState: RebaseInternalState?","type":"property"},{"path":"\/documentation\/version_control\/statusresult\/squashmsgfound","title":"let squashMsgFound: Bool","type":"property"},{"path":"\/documentation\/version_control\/statusresult\/workingdirectory","title":"let workingDirectory: WorkingDirectoryStatus","type":"property"}],"path":"\/documentation\/version_control\/statusresult","title":"StatusResult","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/submodule\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/submodule\/resetsubmodulepaths(directoryurl:paths:)","title":"func resetSubmodulePaths(directoryURL: URL, paths: [String]) throws","type":"method"}],"path":"\/documentation\/version_control\/submodule","title":"Submodule","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/submodulestatus\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/version_control\/submodulestatus","title":"SubmoduleStatus","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/tag\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/tag\/createtag(directoryurl:name:targetcommitsha:)","title":"func createTag(directoryURL: URL, name: String, targetCommitSha: String) throws","type":"method"},{"path":"\/documentation\/version_control\/tag\/deletetag(directoryurl:name:)","title":"func deleteTag(directoryURL: URL, name: String) throws","type":"method"},{"path":"\/documentation\/version_control\/tag\/getalltags(directoryurl:)","title":"func getAllTags(directoryURL: URL) throws -> [String : String]","type":"method"}],"path":"\/documentation\/version_control\/tag","title":"Tag","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/textconflictdetails\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/version_control\/textconflictdetails","title":"TextConflictDetails","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/textconflictentry\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/version_control\/textconflictentry","title":"TextConflictEntry","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/trailer\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/version_control\/trailer\/init(token:value:)","title":"init(token: String, value: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/trailer\/token","title":"var token: String","type":"property"},{"path":"\/documentation\/version_control\/trailer\/value","title":"var value: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/version_control\/trailer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/version_control\/trailer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/version_control\/trailer","title":"Trailer","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/untrackedfilestatus\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/untrackedfilestatus\/kind","title":"var kind: AppFileStatusKind","type":"property"},{"path":"\/documentation\/version_control\/untrackedfilestatus\/submodulestatus","title":"var submoduleStatus: SubmoduleStatus?","type":"property"}],"path":"\/documentation\/version_control\/untrackedfilestatus","title":"UntrackedFileStatus","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/updateindex\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/updateindex\/stagefiles(directoryurl:files:)","title":"func stageFiles(directoryURL: URL, files: [WorkingDirectoryFileChange]) throws","type":"method"},{"path":"\/documentation\/version_control\/updateindex\/updateindex(directoryurl:paths:options:)","title":"func updateIndex(directoryURL: URL, paths: [String], options: UpdateIndexOptions?) throws","type":"method"}],"path":"\/documentation\/version_control\/updateindex","title":"UpdateIndex","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/updateref\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/updateref\/deleteref(directoryurl:ref:reason:)","title":"func deleteRef(directoryURL: URL, ref: String, reason: String?) throws","type":"method"},{"path":"\/documentation\/version_control\/updateref\/updateref(directoryurl:ref:oldvalue:newvalue:reason:)","title":"func updateRef(directoryURL: URL, ref: String, oldValue: String, newValue: String, reason: String) throws","type":"method"}],"path":"\/documentation\/version_control\/updateref","title":"UpdateRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/versioncontrol\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/versioncontrol\/text","title":"var text: String","type":"property"}],"path":"\/documentation\/version_control\/versioncontrol","title":"VersionControl","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/version_control\/workflow\/_(_:_:)-9r9d4","title":"static func < (Workflow, Workflow) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/workflow\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/workflow\/createdat","title":"let createdAt: String","type":"property"},{"path":"\/documentation\/version_control\/workflow\/htmlurl","title":"let htmlURL: String","type":"property"},{"path":"\/documentation\/version_control\/workflow\/id","title":"let id: Int","type":"property"},{"path":"\/documentation\/version_control\/workflow\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/version_control\/workflow\/nodeid","title":"let nodeId: String","type":"property"},{"path":"\/documentation\/version_control\/workflow\/path","title":"let path: String","type":"property"},{"path":"\/documentation\/version_control\/workflow\/state","title":"let state: String","type":"property"},{"path":"\/documentation\/version_control\/workflow\/updatedat","title":"let updatedAt: String","type":"property"},{"path":"\/documentation\/version_control\/workflow\/url","title":"let url: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/version_control\/workflow\/'...(_:)-22fqw","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/version_control\/workflow\/'...(_:)-7rv0m","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/version_control\/workflow\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/version_control\/workflow\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/version_control\/workflow\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/version_control\/workflow\/_(_:_:)-s0jz","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/version_control\/workflow\/_=(_:_:)-7ejsg","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/version_control\/workflow\/_=(_:_:)-7yeqr","title":"static func <= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/version_control\/workflow\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/version_control\/workflow\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/version_control\/workflow\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/version_control\/workflow","title":"Workflow","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/workflowrun\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/workflowrun\/conclusion","title":"let conclusion: String","type":"property"},{"path":"\/documentation\/version_control\/workflowrun\/createdat","title":"let createdAt: String","type":"property"},{"path":"\/documentation\/version_control\/workflowrun\/headbranch","title":"let headBranch: String","type":"property"},{"path":"\/documentation\/version_control\/workflowrun\/headcommit","title":"let headCommit: WorkflowRunCommit","type":"property"},{"path":"\/documentation\/version_control\/workflowrun\/htmlurl","title":"let htmlURL: String","type":"property"},{"path":"\/documentation\/version_control\/workflowrun\/id","title":"let id: Int","type":"property"},{"path":"\/documentation\/version_control\/workflowrun\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/version_control\/workflowrun\/nodeid","title":"let nodeId: String","type":"property"},{"path":"\/documentation\/version_control\/workflowrun\/runnumber","title":"let runNumber: Int","type":"property"},{"path":"\/documentation\/version_control\/workflowrun\/status","title":"let status: String","type":"property"},{"path":"\/documentation\/version_control\/workflowrun\/updatedat","title":"let updatedAt: String","type":"property"},{"path":"\/documentation\/version_control\/workflowrun\/url","title":"let url: String","type":"property"},{"path":"\/documentation\/version_control\/workflowrun\/workflowid","title":"let workflowId: Int","type":"property"}],"path":"\/documentation\/version_control\/workflowrun","title":"WorkflowRun","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/workflowruncommit\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/workflowruncommit\/author","title":"let author: CommitAuthor","type":"property"},{"path":"\/documentation\/version_control\/workflowruncommit\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/version_control\/workflowruncommit\/message","title":"let message: String","type":"property"},{"path":"\/documentation\/version_control\/workflowruncommit\/timestamp","title":"let timestamp: String","type":"property"},{"path":"\/documentation\/version_control\/workflowruncommit\/treeid","title":"let treeId: String","type":"property"}],"path":"\/documentation\/version_control\/workflowruncommit","title":"WorkflowRunCommit","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/workflowruns\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/workflowruns\/totalcount","title":"let totalCount: Int","type":"property"},{"path":"\/documentation\/version_control\/workflowruns\/workflowruns","title":"let workflowRuns: [WorkflowRun]?","type":"property"}],"path":"\/documentation\/version_control\/workflowruns","title":"WorkflowRuns","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/workflows\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/workflows\/totalcount","title":"let totalCount: Int","type":"property"},{"path":"\/documentation\/version_control\/workflows\/workflows","title":"let workflows: [Workflow]","type":"property"}],"path":"\/documentation\/version_control\/workflows","title":"Workflows","type":"struct"},{"path":"\/documentation\/version_control\/workingdirectorystatus","title":"WorkingDirectoryStatus","type":"struct"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/version_control\/gitnotfounderrorcode","title":"let GitNotFoundErrorCode: String","type":"var"},{"path":"\/documentation\/version_control\/repositorydoesnotexisterrorcode","title":"let RepositoryDoesNotExistErrorCode: String","type":"var"},{"path":"\/documentation\/version_control\/giterrorregexes","title":"let gitErrorRegexes: [String : GitError]","type":"var"},{"path":"\/documentation\/version_control\/gitnetworkarguments","title":"var gitNetworkArguments: [String]","type":"var"},{"path":"\/documentation\/version_control\/gitrebasearguments","title":"var gitRebaseArguments: [String]","type":"var"},{"path":"\/documentation\/version_control\/sharedshellclient","title":"var sharedShellClient: LiveShellClient","type":"var"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/version_control\/extractcoauthors(trailers:)","title":"func extractCoAuthors(trailers: [Trailer]) -> [GitAuthor]","type":"func"},{"path":"\/documentation\/version_control\/forkpullrequestremotename(remotename:)","title":"func forkPullRequestRemoteName(remoteName: String) -> String","type":"func"},{"path":"\/documentation\/version_control\/formatrebasevalue(value:)","title":"func formatRebaseValue(value: Double) -> Double","type":"func"},{"path":"\/documentation\/version_control\/getlargestlinenumber(hunks:)","title":"func getLargestLineNumber(hunks: [DiffHunk]) -> Int","type":"func"},{"path":"\/documentation\/version_control\/isconflictwithmarkers(_:)","title":"func isConflictWithMarkers(ConflictedFileStatus) -> Bool","type":"func"},{"path":"\/documentation\/version_control\/isconflictedfilestatus(_:)","title":"func isConflictedFileStatus(AppFileStatus) -> Bool","type":"func"},{"path":"\/documentation\/version_control\/ismanualconflict(_:)","title":"func isManualConflict(ConflictedFileStatus) -> Bool","type":"func"},{"path":"\/documentation\/version_control\/parselineendingtext(text:)","title":"func parseLineEndingText(text: String) -> LineEndingType?","type":"func"},{"path":"\/documentation\/version_control\/typematchesselection(selectiontype:selected:)","title":"func typeMatchesSelection(selectionType: DiffSelectionType, selected: Bool) throws -> Bool","type":"func"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/version_control\/apipullrequestreviewstate\/approved","title":"case approved","type":"case"},{"path":"\/documentation\/version_control\/apipullrequestreviewstate\/changesrequested","title":"case changesRequested","type":"case"},{"path":"\/documentation\/version_control\/apipullrequestreviewstate\/commented","title":"case commented","type":"case"},{"path":"\/documentation\/version_control\/apipullrequestreviewstate\/dismissed","title":"case dismissed","type":"case"},{"path":"\/documentation\/version_control\/apipullrequestreviewstate\/pending","title":"case pending","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/apipullrequestreviewstate\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/version_control\/apipullrequestreviewstate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/version_control\/apipullrequestreviewstate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/apipullrequestreviewstate\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/apipullrequestreviewstate\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/apipullrequestreviewstate\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/version_control\/apipullrequestreviewstate\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/version_control\/apipullrequestreviewstate\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/version_control\/apipullrequestreviewstate","title":"APIPullRequestReviewState","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/version_control\/apireporulemetadataoperator\/contains","title":"case contains","type":"case"},{"path":"\/documentation\/version_control\/apireporulemetadataoperator\/endswith","title":"case endsWith","type":"case"},{"path":"\/documentation\/version_control\/apireporulemetadataoperator\/regex","title":"case regex","type":"case"},{"path":"\/documentation\/version_control\/apireporulemetadataoperator\/startswith","title":"case startsWith","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/apireporulemetadataoperator\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/version_control\/apireporulemetadataoperator\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/version_control\/apireporulemetadataoperator\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/apireporulemetadataoperator\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/apireporulemetadataoperator\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/apireporulemetadataoperator\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/version_control\/apireporulemetadataoperator\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/version_control\/apireporulemetadataoperator\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/version_control\/apireporulemetadataoperator","title":"APIRepoRuleMetadataOperator","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/version_control\/apireporuletype\/branch_name_pattern","title":"case branch_name_pattern","type":"case"},{"path":"\/documentation\/version_control\/apireporuletype\/commit_author_email_pattern","title":"case commit_author_email_pattern","type":"case"},{"path":"\/documentation\/version_control\/apireporuletype\/commit_message_pattern","title":"case commit_message_pattern","type":"case"},{"path":"\/documentation\/version_control\/apireporuletype\/committer_email_pattern","title":"case committer_email_pattern","type":"case"},{"path":"\/documentation\/version_control\/apireporuletype\/creation","title":"case creation","type":"case"},{"path":"\/documentation\/version_control\/apireporuletype\/deletion","title":"case deletion","type":"case"},{"path":"\/documentation\/version_control\/apireporuletype\/non_fast_forward","title":"case non_fast_forward","type":"case"},{"path":"\/documentation\/version_control\/apireporuletype\/pull_request","title":"case pull_request","type":"case"},{"path":"\/documentation\/version_control\/apireporuletype\/required_deployments","title":"case required_deployments","type":"case"},{"path":"\/documentation\/version_control\/apireporuletype\/required_linear_history","title":"case required_linear_history","type":"case"},{"path":"\/documentation\/version_control\/apireporuletype\/required_signatures","title":"case required_signatures","type":"case"},{"path":"\/documentation\/version_control\/apireporuletype\/required_status_checks","title":"case required_status_checks","type":"case"},{"path":"\/documentation\/version_control\/apireporuletype\/update","title":"case update","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/apireporuletype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/version_control\/apireporuletype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/version_control\/apireporuletype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/apireporuletype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/apireporuletype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/apireporuletype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/version_control\/apireporuletype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/version_control\/apireporuletype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/version_control\/apireporuletype","title":"APIRepoRuleType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/version_control\/appfilestatuskind\/conflicted","title":"case conflicted","type":"case"},{"path":"\/documentation\/version_control\/appfilestatuskind\/copied","title":"case copied","type":"case"},{"path":"\/documentation\/version_control\/appfilestatuskind\/deleted","title":"case deleted","type":"case"},{"path":"\/documentation\/version_control\/appfilestatuskind\/modified","title":"case modified","type":"case"},{"path":"\/documentation\/version_control\/appfilestatuskind\/new","title":"case new","type":"case"},{"path":"\/documentation\/version_control\/appfilestatuskind\/renamed","title":"case renamed","type":"case"},{"path":"\/documentation\/version_control\/appfilestatuskind\/untracked","title":"case untracked","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/appfilestatuskind\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/version_control\/appfilestatuskind\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/version_control\/appfilestatuskind\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/appfilestatuskind\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/appfilestatuskind\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/appfilestatuskind\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/version_control\/appfilestatuskind\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/version_control\/appfilestatuskind\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/version_control\/appfilestatuskind","title":"AppFileStatusKind","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/version_control\/branchtype\/local","title":"case local","type":"case"},{"path":"\/documentation\/version_control\/branchtype\/remote","title":"case remote","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/branchtype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/version_control\/branchtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/version_control\/branchtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/branchtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/branchtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/version_control\/branchtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/version_control\/branchtype","title":"BranchType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/version_control\/commitdate\/lastday","title":"case lastDay","type":"case"},{"path":"\/documentation\/version_control\/commitdate\/lastsevendays","title":"case lastSevenDays","type":"case"},{"path":"\/documentation\/version_control\/commitdate\/lastthirtydays","title":"case lastThirtyDays","type":"case"},{"path":"\/documentation\/version_control\/commitdate\/none","title":"case none","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/commitdate\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/commitdate\/gitargs","title":"var gitArgs: [String]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/version_control\/commitdate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/version_control\/commitdate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/commitdate\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/commitdate\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/version_control\/commitdate\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/version_control\/commitdate","title":"CommitDate","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/version_control\/diffhunkexpansiontype\/both","title":"case both","type":"case"},{"path":"\/documentation\/version_control\/diffhunkexpansiontype\/down","title":"case down","type":"case"},{"path":"\/documentation\/version_control\/diffhunkexpansiontype\/none","title":"case none","type":"case"},{"path":"\/documentation\/version_control\/diffhunkexpansiontype\/short","title":"case short","type":"case"},{"path":"\/documentation\/version_control\/diffhunkexpansiontype\/up","title":"case up","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/diffhunkexpansiontype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/version_control\/diffhunkexpansiontype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/version_control\/diffhunkexpansiontype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/diffhunkexpansiontype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/diffhunkexpansiontype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/version_control\/diffhunkexpansiontype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/version_control\/diffhunkexpansiontype","title":"DiffHunkExpansionType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/version_control\/diffselectiontype\/all","title":"case all","type":"case"},{"path":"\/documentation\/version_control\/diffselectiontype\/none","title":"case none","type":"case"},{"path":"\/documentation\/version_control\/diffselectiontype\/partial","title":"case partial","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/diffselectiontype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/version_control\/diffselectiontype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/version_control\/diffselectiontype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/diffselectiontype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/diffselectiontype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/version_control\/diffselectiontype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/version_control\/diffselectiontype","title":"DiffSelectionType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/version_control\/difftype\/binary","title":"case binary","type":"case"},{"path":"\/documentation\/version_control\/difftype\/image","title":"case image","type":"case"},{"path":"\/documentation\/version_control\/difftype\/largetext","title":"case largeText","type":"case"},{"path":"\/documentation\/version_control\/difftype\/submodule","title":"case submodule","type":"case"},{"path":"\/documentation\/version_control\/difftype\/text","title":"case text","type":"case"},{"path":"\/documentation\/version_control\/difftype\/unrenderable","title":"case unrenderable","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/version_control\/difftype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/version_control\/difftype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/version_control\/difftype","title":"DiffType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/version_control\/emailvisibility\/null","title":"case null","type":"case"},{"path":"\/documentation\/version_control\/emailvisibility\/private","title":"case `private`","type":"case"},{"path":"\/documentation\/version_control\/emailvisibility\/public","title":"case `public`","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/emailvisibility\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/version_control\/emailvisibility\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/version_control\/emailvisibility\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/emailvisibility\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/emailvisibility\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/emailvisibility\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/version_control\/emailvisibility\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/version_control\/emailvisibility\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/version_control\/emailvisibility","title":"EmailVisibility","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/version_control\/giterror\/badrevision","title":"case BadRevision","type":"case"},{"path":"\/documentation\/version_control\/giterror\/branchalreadyexists","title":"case BranchAlreadyExists","type":"case"},{"path":"\/documentation\/version_control\/giterror\/branchdeletionfailed","title":"case BranchDeletionFailed","type":"case"},{"path":"\/documentation\/version_control\/giterror\/branchrenamefailed","title":"case BranchRenameFailed","type":"case"},{"path":"\/documentation\/version_control\/giterror\/cannotmergeunrelatedhistories","title":"case CannotMergeUnrelatedHistories","type":"case"},{"path":"\/documentation\/version_control\/giterror\/configlockfilealreadyexists","title":"case ConfigLockFileAlreadyExists","type":"case"},{"path":"\/documentation\/version_control\/giterror\/conflictmodifydeletedinbranch","title":"case ConflictModifyDeletedInBranch","type":"case"},{"path":"\/documentation\/version_control\/giterror\/defaultbranchdeletionfailed","title":"case DefaultBranchDeletionFailed","type":"case"},{"path":"\/documentation\/version_control\/giterror\/emptyrebasepatch","title":"case EmptyRebasePatch","type":"case"},{"path":"\/documentation\/version_control\/giterror\/forcepushrejected","title":"case ForcePushRejected","type":"case"},{"path":"\/documentation\/version_control\/giterror\/gpgfailedtosigndata","title":"case GPGFailedToSignData","type":"case"},{"path":"\/documentation\/version_control\/giterror\/httpsauthenticationfailed","title":"case HTTPSAuthenticationFailed","type":"case"},{"path":"\/documentation\/version_control\/giterror\/httpsrepositorynotfound","title":"case HTTPSRepositoryNotFound","type":"case"},{"path":"\/documentation\/version_control\/giterror\/hexbranchnamerejected","title":"case HexBranchNameRejected","type":"case"},{"path":"\/documentation\/version_control\/giterror\/hostdown","title":"case HostDown","type":"case"},{"path":"\/documentation\/version_control\/giterror\/invalidmerge","title":"case InvalidMerge","type":"case"},{"path":"\/documentation\/version_control\/giterror\/invalidobjectname","title":"case InvalidObjectName","type":"case"},{"path":"\/documentation\/version_control\/giterror\/invalidrebase","title":"case InvalidRebase","type":"case"},{"path":"\/documentation\/version_control\/giterror\/invalidreflength","title":"case InvalidRefLength","type":"case"},{"path":"\/documentation\/version_control\/giterror\/invalidsubmodulesha","title":"case InvalidSubmoduleSHA","type":"case"},{"path":"\/documentation\/version_control\/giterror\/lfsattributedoesnotmatch","title":"case LFSAttributeDoesNotMatch","type":"case"},{"path":"\/documentation\/version_control\/giterror\/localchangesoverwritten","title":"case LocalChangesOverwritten","type":"case"},{"path":"\/documentation\/version_control\/giterror\/localpermissiondenied","title":"case LocalPermissionDenied","type":"case"},{"path":"\/documentation\/version_control\/giterror\/lockfilealreadyexists","title":"case LockFileAlreadyExists","type":"case"},{"path":"\/documentation\/version_control\/giterror\/mergecommitnomainlineoption","title":"case MergeCommitNoMainlineOption","type":"case"},{"path":"\/documentation\/version_control\/giterror\/mergeconflicts","title":"case MergeConflicts","type":"case"},{"path":"\/documentation\/version_control\/giterror\/mergewithlocalchanges","title":"case MergeWithLocalChanges","type":"case"},{"path":"\/documentation\/version_control\/giterror\/noexistingremotebranch","title":"case NoExistingRemoteBranch","type":"case"},{"path":"\/documentation\/version_control\/giterror\/nomatchingremotebranch","title":"case NoMatchingRemoteBranch","type":"case"},{"path":"\/documentation\/version_control\/giterror\/nomergetoabort","title":"case NoMergeToAbort","type":"case"},{"path":"\/documentation\/version_control\/giterror\/nosubmodulemapping","title":"case NoSubmoduleMapping","type":"case"},{"path":"\/documentation\/version_control\/giterror\/nonfastforwardmergeintoemptyhead","title":"case NonFastForwardMergeIntoEmptyHead","type":"case"},{"path":"\/documentation\/version_control\/giterror\/notagitrepository","title":"case NotAGitRepository","type":"case"},{"path":"\/documentation\/version_control\/giterror\/nothingtocommit","title":"case NothingToCommit","type":"case"},{"path":"\/documentation\/version_control\/giterror\/outsiderepository","title":"case OutsideRepository","type":"case"},{"path":"\/documentation\/version_control\/giterror\/patchdoesnotapply","title":"case PatchDoesNotApply","type":"case"},{"path":"\/documentation\/version_control\/giterror\/pathdoesnotexist","title":"case PathDoesNotExist","type":"case"},{"path":"\/documentation\/version_control\/giterror\/pathexistsbutnotinref","title":"case PathExistsButNotInRef","type":"case"},{"path":"\/documentation\/version_control\/giterror\/protectedbranchdeleterejected","title":"case ProtectedBranchDeleteRejected","type":"case"},{"path":"\/documentation\/version_control\/giterror\/protectedbranchforcepush","title":"case ProtectedBranchForcePush","type":"case"},{"path":"\/documentation\/version_control\/giterror\/protectedbranchrequiredstatus","title":"case ProtectedBranchRequiredStatus","type":"case"},{"path":"\/documentation\/version_control\/giterror\/protectedbranchrequiresreview","title":"case ProtectedBranchRequiresReview","type":"case"},{"path":"\/documentation\/version_control\/giterror\/pushnotfastforward","title":"case PushNotFastForward","type":"case"},{"path":"\/documentation\/version_control\/giterror\/pushwithfilesizeexceedinglimit","title":"case PushWithFileSizeExceedingLimit","type":"case"},{"path":"\/documentation\/version_control\/giterror\/pushwithprivateemail","title":"case PushWithPrivateEmail","type":"case"},{"path":"\/documentation\/version_control\/giterror\/rebaseconflicts","title":"case RebaseConflicts","type":"case"},{"path":"\/documentation\/version_control\/giterror\/rebasewithlocalchanges","title":"case RebaseWithLocalChanges","type":"case"},{"path":"\/documentation\/version_control\/giterror\/remotealreadyexists","title":"case RemoteAlreadyExists","type":"case"},{"path":"\/documentation\/version_control\/giterror\/remotedisconnection","title":"case RemoteDisconnection","type":"case"},{"path":"\/documentation\/version_control\/giterror\/revertconflicts","title":"case RevertConflicts","type":"case"},{"path":"\/documentation\/version_control\/giterror\/sshauthenticationfailed","title":"case SSHAuthenticationFailed","type":"case"},{"path":"\/documentation\/version_control\/giterror\/sshkeyauditunverified","title":"case SSHKeyAuditUnverified","type":"case"},{"path":"\/documentation\/version_control\/giterror\/sshpermissiondenied","title":"case SSHPermissionDenied","type":"case"},{"path":"\/documentation\/version_control\/giterror\/sshrepositorynotfound","title":"case SSHRepositoryNotFound","type":"case"},{"path":"\/documentation\/version_control\/giterror\/submodulerepositorydoesnotexist","title":"case SubmoduleRepositoryDoesNotExist","type":"case"},{"path":"\/documentation\/version_control\/giterror\/tagalreadyexists","title":"case TagAlreadyExists","type":"case"},{"path":"\/documentation\/version_control\/giterror\/unresolvedconflicts","title":"case UnresolvedConflicts","type":"case"},{"path":"\/documentation\/version_control\/giterror\/unsafedirectory","title":"case UnsafeDirectory","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/version_control\/giterror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/version_control\/giterror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/version_control\/giterror","title":"GitError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/version_control\/githubaccounttype\/organization","title":"case organization","type":"case"},{"path":"\/documentation\/version_control\/githubaccounttype\/user","title":"case user","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/githubaccounttype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/version_control\/githubaccounttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/version_control\/githubaccounttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/githubaccounttype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/githubaccounttype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/githubaccounttype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/version_control\/githubaccounttype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/version_control\/githubaccounttype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/version_control\/githubaccounttype","title":"GitHubAccountType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/version_control\/githubviewtype\/compare","title":"case compare","type":"case"},{"path":"\/documentation\/version_control\/githubviewtype\/tree","title":"case tree","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/githubviewtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/version_control\/githubviewtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/version_control\/githubviewtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/githubviewtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/githubviewtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/version_control\/githubviewtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/version_control\/githubviewtype","title":"GitHubViewType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/version_control\/gitresetmode\/hard","title":"case hard","type":"case"},{"path":"\/documentation\/version_control\/gitresetmode\/mixed","title":"case mixed","type":"case"},{"path":"\/documentation\/version_control\/gitresetmode\/soft","title":"case soft","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/gitresetmode\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/version_control\/gitresetmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/version_control\/gitresetmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/gitresetmode\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/gitresetmode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/version_control\/gitresetmode\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/version_control\/gitresetmode","title":"GitResetMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/version_control\/gitstatusentry\/added","title":"case added","type":"case"},{"path":"\/documentation\/version_control\/gitstatusentry\/copied","title":"case copied","type":"case"},{"path":"\/documentation\/version_control\/gitstatusentry\/deleted","title":"case deleted","type":"case"},{"path":"\/documentation\/version_control\/gitstatusentry\/ignored","title":"case ignored","type":"case"},{"path":"\/documentation\/version_control\/gitstatusentry\/modified","title":"case modified","type":"case"},{"path":"\/documentation\/version_control\/gitstatusentry\/renamed","title":"case renamed","type":"case"},{"path":"\/documentation\/version_control\/gitstatusentry\/unchanged","title":"case unchanged","type":"case"},{"path":"\/documentation\/version_control\/gitstatusentry\/untracked","title":"case untracked","type":"case"},{"path":"\/documentation\/version_control\/gitstatusentry\/updatedbutunmerged","title":"case updatedButUnmerged","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/gitstatusentry\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/version_control\/gitstatusentry\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/version_control\/gitstatusentry\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/gitstatusentry\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/gitstatusentry\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/gitstatusentry\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/version_control\/gitstatusentry\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/version_control\/gitstatusentry\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/version_control\/gitstatusentry","title":"GitStatusEntry","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/version_control\/gittype\/added","title":"case added","type":"case"},{"path":"\/documentation\/version_control\/gittype\/copied","title":"case copied","type":"case"},{"path":"\/documentation\/version_control\/gittype\/deleted","title":"case deleted","type":"case"},{"path":"\/documentation\/version_control\/gittype\/filetypechange","title":"case fileTypeChange","type":"case"},{"path":"\/documentation\/version_control\/gittype\/ignored","title":"case ignored","type":"case"},{"path":"\/documentation\/version_control\/gittype\/modified","title":"case modified","type":"case"},{"path":"\/documentation\/version_control\/gittype\/renamed","title":"case renamed","type":"case"},{"path":"\/documentation\/version_control\/gittype\/unchanged","title":"case unchanged","type":"case"},{"path":"\/documentation\/version_control\/gittype\/unknown","title":"case unknown","type":"case"},{"path":"\/documentation\/version_control\/gittype\/updatedunmerged","title":"case updatedUnmerged","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/gittype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/gittype\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/version_control\/gittype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/version_control\/gittype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/gittype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/gittype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/gittype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/version_control\/gittype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/version_control\/gittype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/version_control\/gittype","title":"GitType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/version_control\/httpmethod\/delete","title":"case DELETE","type":"case"},{"path":"\/documentation\/version_control\/httpmethod\/get","title":"case GET","type":"case"},{"path":"\/documentation\/version_control\/httpmethod\/patch","title":"case PATCH","type":"case"},{"path":"\/documentation\/version_control\/httpmethod\/post","title":"case POST","type":"case"},{"path":"\/documentation\/version_control\/httpmethod\/put","title":"case PUT","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/httpmethod\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/version_control\/httpmethod\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/version_control\/httpmethod\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/httpmethod\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/httpmethod\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/version_control\/httpmethod\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/version_control\/httpmethod","title":"HTTPMethod","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/version_control\/idifftypes\/binary(_:)","title":"case binary(IBinaryDiff)","type":"case"},{"path":"\/documentation\/version_control\/idifftypes\/image(_:)","title":"case image(IImageDiff)","type":"case"},{"path":"\/documentation\/version_control\/idifftypes\/large(_:)","title":"case large(ILargeTextDiff)","type":"case"},{"path":"\/documentation\/version_control\/idifftypes\/text(_:)","title":"case text(ITextDiff)","type":"case"},{"path":"\/documentation\/version_control\/idifftypes\/unrenderable(_:)","title":"case unrenderable(IUnrenderableDiff)","type":"case"}],"path":"\/documentation\/version_control\/idifftypes","title":"IDiffTypes","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/version_control\/indexstatus\/added","title":"case added","type":"case"},{"path":"\/documentation\/version_control\/indexstatus\/copied","title":"case copied","type":"case"},{"path":"\/documentation\/version_control\/indexstatus\/deleted","title":"case deleted","type":"case"},{"path":"\/documentation\/version_control\/indexstatus\/modified","title":"case modified","type":"case"},{"path":"\/documentation\/version_control\/indexstatus\/renamed","title":"case renamed","type":"case"},{"path":"\/documentation\/version_control\/indexstatus\/typechanged","title":"case typeChanged","type":"case"},{"path":"\/documentation\/version_control\/indexstatus\/unknown","title":"case unknown","type":"case"},{"path":"\/documentation\/version_control\/indexstatus\/unmerged","title":"case unmerged","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/indexstatus\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/version_control\/indexstatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/version_control\/indexstatus\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/indexstatus\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/indexstatus\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/version_control\/indexstatus\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/version_control\/indexstatus","title":"IndexStatus","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/version_control\/lineendingtype\/cr","title":"case cr","type":"case"},{"path":"\/documentation\/version_control\/lineendingtype\/crlf","title":"case crlf","type":"case"},{"path":"\/documentation\/version_control\/lineendingtype\/lf","title":"case lf","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/lineendingtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/version_control\/lineendingtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/version_control\/lineendingtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/lineendingtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/lineendingtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/version_control\/lineendingtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/version_control\/lineendingtype","title":"LineEndingType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/version_control\/manualconflictresolution\/ours","title":"case ours","type":"case"},{"path":"\/documentation\/version_control\/manualconflictresolution\/theirs","title":"case theirs","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/manualconflictresolution\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/version_control\/manualconflictresolution\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/version_control\/manualconflictresolution\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/manualconflictresolution\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/manualconflictresolution\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/version_control\/manualconflictresolution\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/version_control\/manualconflictresolution","title":"ManualConflictResolution","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/version_control\/mergeresult\/alreadyuptodate","title":"case alreadyUpToDate","type":"case"},{"path":"\/documentation\/version_control\/mergeresult\/failed","title":"case failed","type":"case"},{"path":"\/documentation\/version_control\/mergeresult\/success","title":"case success","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/version_control\/mergeresult\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/version_control\/mergeresult\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/version_control\/mergeresult","title":"MergeResult","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/version_control\/networkingerror\/customerror(message:)","title":"case customError(message: String)","type":"case"},{"path":"\/documentation\/version_control\/networkingerror\/encodingfailed(_:)","title":"case encodingFailed(Error)","type":"case"},{"path":"\/documentation\/version_control\/networkingerror\/invalidresponse","title":"case invalidResponse","type":"case"},{"path":"\/documentation\/version_control\/networkingerror\/invalidurl","title":"case invalidURL","type":"case"},{"path":"\/documentation\/version_control\/networkingerror\/nodata","title":"case noData","type":"case"},{"path":"\/documentation\/version_control\/networkingerror\/servererror(statuscode:data:)","title":"case serverError(statusCode: Int, data: Data)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/networkingerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/version_control\/networkingerror","title":"NetworkingError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/version_control\/norenameindexstatus\/added","title":"case added","type":"case"},{"path":"\/documentation\/version_control\/norenameindexstatus\/deleted","title":"case deleted","type":"case"},{"path":"\/documentation\/version_control\/norenameindexstatus\/modified","title":"case modified","type":"case"},{"path":"\/documentation\/version_control\/norenameindexstatus\/typechanged","title":"case typeChanged","type":"case"},{"path":"\/documentation\/version_control\/norenameindexstatus\/unknown","title":"case unknown","type":"case"},{"path":"\/documentation\/version_control\/norenameindexstatus\/unmerged","title":"case unmerged","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/version_control\/norenameindexstatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/version_control\/norenameindexstatus\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/version_control\/norenameindexstatus","title":"NoRenameIndexStatus","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/version_control\/processerror\/launchfailed(_:)","title":"case launchFailed(String)","type":"case"},{"path":"\/documentation\/version_control\/processerror\/outputparsingfailed","title":"case outputParsingFailed","type":"case"},{"path":"\/documentation\/version_control\/processerror\/timeout","title":"case timeout","type":"case"},{"path":"\/documentation\/version_control\/processerror\/unexpectedexitcode(_:)","title":"case unexpectedExitCode(Int)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/processerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/version_control\/processerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/version_control\/processerror","title":"ProcessError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/version_control\/repositorytype\/bare","title":"case bare","type":"case"},{"path":"\/documentation\/version_control\/repositorytype\/missing","title":"case missing","type":"case"},{"path":"\/documentation\/version_control\/repositorytype\/regular(toplevelworkingdirectory:)","title":"case regular(topLevelWorkingDirectory: String)","type":"case"},{"path":"\/documentation\/version_control\/repositorytype\/unsafe(path:)","title":"case unsafe(path: String)","type":"case"}],"path":"\/documentation\/version_control\/repositorytype","title":"RepositoryType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/version_control\/unmergedentrysummary\/addedbythem","title":"case AddedByThem","type":"case"},{"path":"\/documentation\/version_control\/unmergedentrysummary\/addedbyus","title":"case AddedByUs","type":"case"},{"path":"\/documentation\/version_control\/unmergedentrysummary\/bothadded","title":"case BothAdded","type":"case"},{"path":"\/documentation\/version_control\/unmergedentrysummary\/bothdeleted","title":"case BothDeleted","type":"case"},{"path":"\/documentation\/version_control\/unmergedentrysummary\/bothmodified","title":"case BothModified","type":"case"},{"path":"\/documentation\/version_control\/unmergedentrysummary\/deletedbythem","title":"case DeletedByThem","type":"case"},{"path":"\/documentation\/version_control\/unmergedentrysummary\/deletedbyus","title":"case DeletedByUs","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/unmergedentrysummary\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/version_control\/unmergedentrysummary\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/version_control\/unmergedentrysummary\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/unmergedentrysummary\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/unmergedentrysummary\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/unmergedentrysummary\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/version_control\/unmergedentrysummary\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/version_control\/unmergedentrysummary\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/version_control\/unmergedentrysummary","title":"UnmergedEntrySummary","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/version_control\/usercanbypass\/always","title":"case always","type":"case"},{"path":"\/documentation\/version_control\/usercanbypass\/never","title":"case never","type":"case"},{"path":"\/documentation\/version_control\/usercanbypass\/pullrequestonly","title":"case pullRequestOnly","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/usercanbypass\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/version_control\/usercanbypass\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/version_control\/usercanbypass\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/version_control\/usercanbypass\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/version_control\/usercanbypass\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/usercanbypass\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/version_control\/usercanbypass\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/version_control\/usercanbypass\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/version_control\/usercanbypass","title":"UserCanBypass","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Classes","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/foundation\/filemanager\/directoryexistsatpath(_:)","title":"func directoryExistsAtPath(String) -> Bool","type":"method"}],"path":"\/documentation\/version_control\/foundation\/filemanager","title":"FileManager","type":"extension"},{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/foundation\/date\/gitdateformat(commitdate:)","title":"func gitDateFormat(commitDate: String) -> Date?","type":"method"},{"path":"\/documentation\/version_control\/foundation\/date\/togithubisodatestring(_:)","title":"func toGitHubIsoDateString(Date) -> String","type":"method"},{"path":"\/documentation\/version_control\/foundation\/date\/yearmonthdayformat()","title":"func yearMonthDayFormat() -> String","type":"method"}],"path":"\/documentation\/version_control\/foundation\/date","title":"Date","type":"extension"}],"path":"\/documentation\/version_control\/foundation","title":"Foundation","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/version_control\/swift\/string\/escapedwhitespaces()","title":"func escapedWhiteSpaces() -> String","type":"method"},{"path":"\/documentation\/version_control\/swift\/string\/removingnewlines()","title":"func removingNewLines() -> String","type":"method"},{"path":"\/documentation\/version_control\/swift\/string\/removingspaces()","title":"func removingSpaces() -> String","type":"method"},{"path":"\/documentation\/version_control\/swift\/string\/substring(_:)","title":"func substring(Int) -> String","type":"method"}],"path":"\/documentation\/version_control\/swift\/string","title":"String","type":"extension"}],"path":"\/documentation\/version_control\/swift","title":"Swift","type":"extension"}],"path":"\/documentation\/version_control","title":"Version-Control","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}